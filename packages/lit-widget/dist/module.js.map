{"version":3,"file":"module.js","sources":["../src/lit-widget-base.js","../src/tools/debounce.js","../src/tools/listeners-map.js","../src/events-controller.js","../src/lit-widget.js","../src/decorators.js","../src/tools/keyboard.js","../src/events-helpers.js"],"sourcesContent":["import { LitElement } from 'lit';\r\n\r\nexport class LitWidgetBase extends LitElement {\r\n\r\n  get targetAttribute() {\r\n    return 'data-target';\r\n  }\r\n\r\n  get targetsAttribute() {\r\n    return 'data-targets';\r\n  }\r\n\r\n  createTargetPath(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `${tag}.${targetName}`;\r\n  }\r\n\r\n  createTargetSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  createTargetsSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetsAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  targetMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  targetsMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetsSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  /**\r\n   * findTarget will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning any the first child that:\r\n   *\r\n   *  - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find element instead of using [data-target]\r\n   * @param {Function} [converter] - The result converter can be used to convert the tag, for example using templateContent\r\n   * @returns {(HTMLElement|any|null)} The HTML element found, or null if no matching element was found\r\n   */\r\n  findTarget(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          return convert(el);\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetSelector = this.createTargetSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetSelector)) {\r\n        if (!el.closest(tag)) return convert(el);\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetSelector)) {\r\n      if (el.closest(tag) === this) return convert(el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * findTargets will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning all matching child elements that are:\r\n   *\r\n   *  - Matches the selector of `[data-targets~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find elements instead of using [data-targets]\r\n   * @param {Function} [converter] - The result converter can be used to convert the result tags, for example using templateContent\r\n   * @returns {HTMLElement[]} The HTML elements found\r\n   */\r\n  findTargets(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n    const targets = [];\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetsSelector = this.createTargetsSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetsSelector)) {\r\n        if (!el.closest(tag)) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetsSelector)) {\r\n      if (el.closest(tag) === this) {\r\n        targets.push(convert(el));\r\n      }\r\n    }\r\n\r\n    return targets;\r\n  }\r\n\r\n}\r\n","/**\r\n * Throttle the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for \"resize\" or \"scroll\" events.\r\n *\r\n * @param {function} fn - The function to throttle.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new throttled function.\r\n */\r\nexport function throttle(fn, delay) {\r\n  let throttlePause;\r\n\r\n  function throttler(...args) {\r\n    if (throttlePause) return;\r\n    throttlePause = true;\r\n\r\n    setTimeout(() => {\r\n      fn.apply(this, args);\r\n      throttlePause = false;\r\n    }, duration(delay));\r\n  }\r\n\r\n  return throttler;\r\n}\r\n\r\n/**\r\n * Debounce the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for events such as key presses or \"input\" in input fields.\r\n *\r\n * @param {function} fn - The function to debounce.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new debounced function.\r\n */\r\nexport function debounce(fn, delay) {\r\n  let timeoutId;\r\n\r\n  function debouncer(...args) {\r\n    debouncer.clear();\r\n\r\n    timeoutId = setTimeout(() => {\r\n      timeoutId = null;\r\n\r\n      fn.apply(this, args);\r\n    }, duration(delay));\r\n  }\r\n\r\n  debouncer.clear = function() {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  }\r\n\r\n  return debouncer;\r\n}\r\n\r\n/**\r\n * Duration converter from human-readable form to milliseconds.\r\n *\r\n * Converts a string like `'<delay>ms'` to milliseconds.\r\n * Supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * If a numeric value is passed, it is returned unchanged.\r\n *\r\n * @param {(string|Number)} value - Duration in human-readable form.\r\n * @returns {Number} - Value in milliseconds.\r\n */\r\nexport function duration(value) {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n  if (typeof value !== 'string') {\r\n    throw new Error(`Invalid duration \"${value}\".`);\r\n  }\r\n\r\n  const duration = parseFloat(value);\r\n  if (isNaN(duration)) {\r\n    throw new Error(`Invalid duration value \"${value}\".`);\r\n  }\r\n\r\n  if (value.endsWith('ms')) {\r\n    return duration;\r\n  }\r\n  if (value.endsWith('s')) {\r\n    return duration * 1000;\r\n  }\r\n  if (value.endsWith('m')) {\r\n    return duration * 1000 * 60;\r\n  }\r\n}\r\n","\r\nexport class ListenersMap {\r\n\r\n\t#map;\r\n\r\n\tconstructor() {\r\n  \tthis.#map = new Map();\r\n  }\r\n\r\n  #normalizeKey(key) {\r\n  \treturn JSON.stringify(key);\r\n    //return key;\r\n  }\r\n\r\n  has(el, key) {\r\n  \tif (!this.#map.has(el)) return false;\r\n    return this.#map.get(el).has(this.#normalizeKey(key));\r\n  }\r\n\r\n  get(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).get(this.#normalizeKey(key));\r\n  }\r\n\r\n  set(el, key, value) {\r\n  \tconst listeners = this.#map.get(el) || new Map();\r\n\t\tconst normalizedKey = this.#normalizeKey(key);\r\n    listeners.set(normalizedKey, value);\r\n    this.#map.set(el, listeners);\r\n  }\r\n\r\n  delete(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).delete(this.#normalizeKey(key));\r\n  }\r\n\r\n  clear() {\r\n    this.#map = new Map();\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n  \tfor (const [el, listeners] of this.#map) {\r\n    \tfor (const [key, listener] of listeners) {\r\n      \tyield [el, key, listener];\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { LitWidgetBase } from './lit-widget-base';\r\nimport { throttle, debounce } from './tools/debounce';\r\nimport { ListenersMap } from './tools/listeners-map';\r\n\r\nclass EventHandler {\r\n\r\n  constructor(eventName, handler) {\r\n    this.eventName = eventName;\r\n    this.handler = handler;\r\n  }\r\n\r\n  addListener(el) {\r\n    el.addEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n  removeListener(el) {\r\n    el.removeEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class EventsController {\r\n\r\n  observer;\r\n\r\n  listeners = new ListenersMap();\r\n\r\n  constructor(host, events) {\r\n    if (!(host instanceof LitWidgetBase)) {\r\n      throw new Error('[LitWidget.EventsController]: The host is not an instance of the LitWidget class.');\r\n    }\r\n\r\n    this.host = host;\r\n    this.tagName = this.host.tagName.toLowerCase();\r\n    this.events = this.prepareEvents(events);\r\n\r\n    // console.log('Events:', this.events);\r\n\r\n    this.host.addController(this);\r\n  }\r\n\r\n  prepareEvents(events) {\r\n    let targetedEvents = new Map();\r\n\r\n    for (const event of events) {\r\n      let target;\r\n      if ((event.target instanceof HTMLElement) || (event.target instanceof Document) || (event.target instanceof Window)) {\r\n        target = {type: 'element', element: event.target};\r\n      } else {\r\n        if (typeof event.target === 'string') {\r\n          target = {type: 'target', target: event.target, selector: event.selector};\r\n        } else {\r\n          throw new Error(`[LitWidget.EventsController]: Invalid event definition: ${JSON.stringify(event)}.`);\r\n        }\r\n      }\r\n\r\n      targetedEvents.set(target, event);\r\n    }\r\n\r\n    // console.log('Targeted events:', targetedEvents);\r\n\r\n    return targetedEvents;\r\n  }\r\n\r\n  hostConnected() {\r\n    // console.log('[!] EventsController connected');\r\n\r\n    // Bind [type=element] events to elements\r\n    this.bindElementsEvents();\r\n\r\n    // Bind element events to targets\r\n    this.bindTargetElements(this.host);\r\n\r\n    // Observe shadowRoot and element\r\n    this.listen([this.host.shadowRoot, this.host]);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    // console.log('[!] EventsController disconnected');\r\n\r\n    // Disconnect observer\r\n    this.observer?.disconnect();\r\n    this.observer = null;\r\n\r\n    // Remove elements listeners\r\n    for (const [element, target, handler] of this.listeners) {\r\n      handler.removeListener(element);\r\n    }\r\n    this.listeners.clear();\r\n  }\r\n\r\n  createHandler(event) {\r\n    // Event name\r\n    let eventName = event.event;\r\n\r\n    // Add listeners if attribute added\r\n    let handler = (...args) => event.handler.apply(this.host, args);\r\n\r\n    // Handling debounce, etc...\r\n    if (event.debounce) {\r\n      handler = debounce(handler, event.debounce);\r\n    } else if (event.throttle) {\r\n      handler = throttle(handler, event.throttle);\r\n    }\r\n    if (event['wrapper'] != null && typeof event['wrapper'] !== 'undefined') {\r\n      handler = event.wrapper.call(this.host, handler/*, this.host*/);\r\n    }\r\n\r\n    // Handling delegated event\r\n    if (typeof event.selector == 'string') {\r\n      handler = (() => {\r\n        const prevHandler = handler;\r\n        return (e) => {\r\n          if (e.target.matches(event.selector)) {\r\n            prevHandler(e);\r\n          }\r\n        };\r\n      })();\r\n    }\r\n\r\n    // Handle event preset (eventName = {eventHandler: string, isMatch: function})\r\n    if (typeof eventName == 'object') {\r\n      const preset = eventName;\r\n      if ((preset.eventName == null) || (typeof preset.isMatch !== 'function')) {\r\n        throw new Error(`[LitWidget.EventsController]: Invalid event preset: ${preset}`);\r\n      }\r\n\r\n      // Extract eventName from preset\r\n      eventName = preset.eventName;\r\n\r\n      // Wrap handler\r\n      handler = (() => {\r\n        const isMatch = preset.isMatch;\r\n        const prevHandler = handler;\r\n        return (e) => {\r\n          if (isMatch(e)) {\r\n            // TODO: ??? Patch Event? For example: add 'shortcut' property.\r\n            prevHandler(e);\r\n          }\r\n        };\r\n      })();\r\n\r\n    }\r\n\r\n    // Create event handler\r\n    const eventHandler = new EventHandler(eventName, handler);\r\n\r\n    return eventHandler;\r\n  }\r\n\r\n  bindElementsEvents() {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'element') continue;\r\n\r\n      const key = {element: eventInfo.element, target: eventInfo};\r\n      if (this.listeners.has(eventInfo.element, key)) continue;\r\n\r\n      // Create event handler\r\n      const eventHandler = this.createHandler(event);\r\n\r\n      // Add listener to element\r\n      eventHandler.addListener(eventInfo.element);\r\n\r\n      // Store element's event handler\r\n      this.listeners.set(eventInfo.element, key, eventHandler);\r\n    }\r\n  }\r\n\r\n  bindEvents(el, oldAttrValue) {\r\n    // console.log('Bind actions:', el);\r\n\r\n    // for (const event of this.events) {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'target') continue;\r\n\r\n      const isMatch = this.host.targetMatches(el, this.tagName, eventInfo.target) || this.host.targetsMatches(el, this.tagName, eventInfo.target);\r\n      const isOldMatch = !isMatch && (oldAttrValue == this.host.createTargetPath(this.tagName, eventInfo.target));\r\n      const key = {element: el, id: event.id};\r\n\r\n      if (isMatch) {\r\n        if (this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (+):', key, el, event);\r\n\r\n        // Skip nested (Shadow DOM Only!)\r\n        const isShadowNode = el.getRootNode() === this.host.shadowRoot;\r\n        if (isShadowNode && el.closest(this.tagName)) continue;\r\n\r\n        // Create event handler\r\n        const eventHandler = this.createHandler(event);\r\n\r\n        // Add listener to element\r\n        eventHandler.addListener(el);\r\n\r\n        // Store element's event handler\r\n        this.listeners.set(el, key, eventHandler);\r\n      } else if (isOldMatch) {\r\n        if (!this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (-):', key, el, event);\r\n\r\n        // Remove listeners if attribute removed\r\n        const handler = this.listeners.get(el, key);\r\n        handler?.removeListener(el);\r\n\r\n        // Remove element from listeners map\r\n        this.listeners.delete(el, key);\r\n      }\r\n    }\r\n  }\r\n\r\n  bindTargetElements(root) {\r\n    // Bind controller's targets\r\n    for (const el of root.querySelectorAll(`[${this.host.targetAttribute}],[${this.host.targetsAttribute}]`)) {\r\n      this.bindEvents(el);\r\n    }\r\n\r\n    // Also bind the controller to itself\r\n    if (root instanceof Element && (root.hasAttribute(this.host.targetAttribute) || root.hasAttribute(this.host.targetsAttribute))) {\r\n      this.bindEvents(root);\r\n    }\r\n  }\r\n\r\n  listen(els) {\r\n    if (!this.observer) {\r\n      // Create observer\r\n      this.observer = new MutationObserver(mutations => {\r\n        for (const mutation of mutations) {\r\n          if (mutation.type === 'attributes' && mutation.target instanceof Element) {\r\n            this.bindEvents(mutation.target, mutation.oldValue);\r\n          } else if (mutation.type === 'childList' && mutation.addedNodes.length) {\r\n            for (const node of mutation.addedNodes) {\r\n              if (node instanceof Element) {\r\n                this.bindTargetElements(node);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Observe elements\r\n    for (const el of els) {\r\n      this.observer.observe(\r\n        el,\r\n        {\r\n          childList: true,\r\n          subtree: true,\r\n          attributeFilter: [\r\n            this.host.targetAttribute,\r\n            this.host.targetsAttribute,\r\n          ],\r\n          attributeOldValue : true,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { html } from 'lit';\r\nimport { templateContent } from 'lit/directives/template-content.js';\r\nimport { EventsController } from './events-controller';\r\nimport { LitWidgetBase } from './lit-widget-base';\r\n\r\n/**\r\n * Declarative binding to child elements for [LitElement](https://lit.dev/)\r\n * like [Github/Catalyst](https://catalyst.rocks/) and\r\n * [Stimulus.js](https://stimulus.hotwired.dev/).\r\n *\r\n * To define a widget, subclass LitWidget, specify targets using\r\n * the `@target/@targets` decorators or the `static targets/targetsAll` property,\r\n * and add event handlers using the `@onEvent` decorator or\r\n * the `events` property.\r\n *\r\n * LitWidget unlike LitElement implements the **`render()`** method,\r\n * which renders all child elements of the widget through `<slot>`.\r\n * To change this behavior, simply override the `render` method and\r\n * implement your own rendering.\r\n *\r\n * LitWidget makes all page styles (both `<style>` and `<link>` tags) available\r\n * in **shadowRoot** by default (except styles with the `[data-shared=\"false\"]` attribute),\r\n * this behavior can be disabled by setting the `sharedStyles` static property to `false`.\r\n *\r\n * TODO: Describe [data-root] binding\r\n *\r\n * TODO: Describe \"static targets/targetsAll\"\r\n * TODO: Describe \"static events\"\r\n * TODO: Describe defaultValues pattern\r\n *\r\n * ## Events:\r\n *\r\n * ```js\r\n * events = [\r\n *   // Event bound to target\r\n *   {event: 'click', target: 'button', handler: 'doClick'},\r\n *\r\n *   // Event bound to DOM Element\r\n *   {event: 'click', target: document, handler: 'outsideClick'},\r\n *\r\n *   // Event bound to element via selector\r\n *   {event: 'click', selector: '.expand-button', handler: 'doExpand'},\r\n * ];\r\n * ```\r\n *\r\n */\r\nexport class LitWidget extends LitWidgetBase {\r\n\r\n  static widget(name) {\r\n    return function(proto, options) {\r\n      LitWidget.define(name, proto, options);\r\n    }\r\n  }\r\n\r\n  static define(name, constructor, options) {\r\n    customElements.define('w-' + name, constructor, options);\r\n  }\r\n\r\n  /**\r\n   * Default renderer, renders Light DOM\r\n   */\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  static defaultValues = {}\r\n\r\n  get defaultValues() {\r\n    if (this._defaultValues != null) {\r\n      return this._defaultValues;\r\n    }\r\n\r\n    const parentDefaultValues = (this instanceof LitWidget) ? {} : Object.getPrototypeOf(this).defaultValues;\r\n    this._defaultValues = {\r\n      ...parentDefaultValues,\r\n      ...this.constructor.defaultValues,\r\n    };\r\n\r\n    return this._defaultValues;\r\n  }\r\n\r\n  #events;\r\n\r\n  #prepareEvents() {\r\n    const events = [\r\n      ...this._events,\r\n      ...this.events,\r\n    ];\r\n\r\n  \tconst eventsDefs = events.map((event, index) => {\r\n      return {id: index, ...event};\r\n    });\r\n\r\n    Object.defineProperty(this, 'events', {\r\n    \tconfigurable: true,\r\n      get() {\r\n      \treturn eventsDefs;\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies whether to import page styles into shadowRoot.\r\n   */\r\n  static sharedStyles = true\r\n\r\n  createRenderRoot() {\r\n    // Find handle [data-root]\r\n    let shadowRoot = true;\r\n    let root;\r\n    const tagName = this.tagName.toLowerCase();\r\n    const rootElement = this.querySelector(`[data-root=\"${tagName}\"]`);\r\n    if (!!rootElement && rootElement.closest(tagName) == this) {\r\n      root = rootElement;\r\n      shadowRoot = false;\r\n    } else {\r\n      root = super.createRenderRoot();\r\n    }\r\n\r\n    const sharedStyles = Object.getPrototypeOf(this).constructor.sharedStyles;\r\n\r\n    if (shadowRoot && sharedStyles) {\r\n      // Import styles\r\n      for (const style of document.head.querySelectorAll('style')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n\r\n      // Import link[stylesheet]\r\n      for (const style of document.head.querySelectorAll('link[rel=\"stylesheet\"]')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n    }\r\n\r\n    return root;\r\n  }\r\n\r\n  connectedCallback() {\r\n    if (!this.#events) {\r\n      this.#prepareEvents();\r\n      this.#events = new EventsController(this, this.events);\r\n    }\r\n\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    if (typeof this._findCache !== 'undefined') {\r\n      this._findCache = {};\r\n    }\r\n  }\r\n\r\n}\r\n\r\nLitWidget.addInitializer((instance) => {\r\n  const klass = Object.getPrototypeOf(instance).constructor;\r\n\r\n  if (typeof klass.targets !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targets)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n\r\n          if (this._findCache[target]) {\r\n            return this._findCache[target];\r\n          } else {\r\n            let targetElement = this._findCache[target] ??= this.findTarget(this.tagName, target, options.selector);\r\n            if (targetElement == null) {\r\n              console.error(`[LitWidget \"${klass.name}\"] Target \"${target}\" not found.`);\r\n            } else {\r\n              const convertTemplate = (options.template === true) || ((targetElement.tagName.toLowerCase() == 'template') && (options.template !== false));\r\n              if (convertTemplate) {\r\n                targetElement = templateContent(targetElement);\r\n              }\r\n              this._findCache[target] = targetElement;\r\n            }\r\n            return targetElement;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (typeof klass.targetsAll !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targetsAll)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n          return this._findCache[target] ??= this.findTargets(this.tagName, target, options.selector);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n","import { LitWidget } from './lit-widget';\r\n\r\n/**\r\n * Decorator to bind a property to a child HTML element\r\n *\r\n * By default, it binds to a child element with the `data-target` attribute equal to\r\n * the component's tag name and the name of the property connected by a dot,\r\n * like this - `tag-name.property-name`.\r\n *\r\n * The element is first looked up in renderRoot and then in the component tag itself.\r\n *\r\n * If a CSS selector is specified, the element with the matching selector\r\n * is searched for only among the child elements of the component tag.\r\n *\r\n * If the element being bound is the `<template>` tag, then by default\r\n * automatic conversion takes place using the Lit's directive `templateContent`.\r\n * To disable this behavior - you must specify `template: false`.\r\n *\r\n * @param {{selector: string, template: Boolean}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the element to which the property will be bound.\r\n * @param {Boolean} options.template - Controls how the `<template>` tag is converted when bound.\r\n */\r\nexport function target({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targets === 'undefined') {\r\n      klass.targets = {};\r\n    }\r\n    klass.targets[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to bind a property to an array of HTML child elements\r\n *\r\n * By default, it binds to an array of child elements with a `data-targets`\r\n * attribute equal to the component's tag name and the name of the property\r\n * connected by a dot, like this - `tag-name.property-name`.\r\n *\r\n * Elements are looked up in renderRoot and in the component tag itself.\r\n *\r\n * If a CSS selector is specified, all elements with the matching selector\r\n * are searched only among the child elements of the component tag.\r\n *\r\n * @param {{selector: string}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the elements to which the property will be bound.\r\n */\r\nexport function targets({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targetsAll === 'undefined') {\r\n      klass.targetsAll = {};\r\n    }\r\n    klass.targetsAll[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to attach a method as an HTML child element event handler\r\n *\r\n * @param {(string|Window|Document|HTMLElement)} target - The name of the target to find the HTML element.\r\n *     You can pass an existing HTML element or window to attach an event handler to document.body or window for example.\r\n * @param {string} event - The name of the DOM event to which the handler is attached.\r\n * @param {{debounce: (Number|string), throttle: (Number|string), wrapper: function(function, this)}} options - Optional parameters for attaching an event.\r\n * TODO: @param options.selector\r\n * @param options.debounce - Delay to debounce the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for events such as key presses or \"input\" in input fields.\r\n * @param options.throttle - Delay to throttle the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for \"resize\" or \"scroll\" events.\r\n * @param options.wrapper - Wrapper function to apply additional decorators to the event handler;\r\n *     can be useful for example to apply a debounce decorator with a delay set at runtime:\r\n *     `onEvent(..., wrapper: (fn, self) => debounce(fn, self.delay) )`.\r\n *     The first parameter in the wrapper is the event handler method,\r\n *     the second is a reference to the class instance.\r\n */\r\nexport function onEvent(target, event, { /* TODO: selector */ debounce, throttle, wrapper } = {}) {\r\n  return function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof instance._events === 'undefined') {\r\n      instance._events = [];\r\n    }\r\n\r\n    instance._events.push({\r\n      target: target,\r\n      handler: instance[property],\r\n      event: event,\r\n      // TODO: selector\r\n      debounce: debounce || null,\r\n      throttle: throttle || null,\r\n      wrapper: wrapper || null,\r\n    });\r\n  };\r\n}\r\n","// https://github.com/ianstormtaylor/is-hotkey/blob/master/src/index.js\r\n\r\nexport class KeyboardShortcut {\r\n\r\n  constructor(shortcut, {useKey = true} = {}) {\r\n    // Generate F1-F20 codes\r\n    for (let f = 1; f < 20; f++) {\r\n      this.keyCodes['f' + f] = 111 + f;\r\n    }\r\n\r\n    this.useKey = useKey;\r\n    this.shortcutName = shortcut.toLowerCase();\r\n    this.shortcut = this.parse(this.shortcutName);\r\n  }\r\n\r\n  static get isMac() {\r\n    return this._isMac ??= /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\r\n  }\r\n\r\n  keyModifiers = {\r\n    alt: 'altKey',\r\n    control: 'ctrlKey',\r\n    meta: 'metaKey',\r\n    shift: 'shiftKey',\r\n  }\r\n\r\n  keyAliases = {\r\n    add: '+',\r\n    break: 'pause',\r\n    cmd: 'meta',\r\n    command: 'meta',\r\n    ctl: 'control',\r\n    ctrl: 'control',\r\n    del: 'delete',\r\n    down: 'arrowdown',\r\n    esc: 'escape',\r\n    ins: 'insert',\r\n    left: 'arrowleft',\r\n    mod: this.constructor.isMac ? 'meta' : 'control',\r\n    opt: 'alt',\r\n    option: 'alt',\r\n    return: 'enter',\r\n    right: 'arrowright',\r\n    space: ' ',\r\n    spacebar: ' ',\r\n    up: 'arrowup',\r\n    win: 'meta',\r\n    windows: 'meta',\r\n  }\r\n\r\n  keyCodes = {\r\n    backspace: 8,\r\n    tab: 9,\r\n    enter: 13,\r\n    shift: 16,\r\n    control: 17,\r\n    alt: 18,\r\n    pause: 19,\r\n    capslock: 20,\r\n    escape: 27,\r\n    ' ': 32,\r\n    pageup: 33,\r\n    pagedown: 34,\r\n    end: 35,\r\n    home: 36,\r\n    arrowleft: 37,\r\n    arrowup: 38,\r\n    arrowright: 39,\r\n    arrowdown: 40,\r\n    insert: 45,\r\n    delete: 46,\r\n    meta: 91,\r\n    numlock: 144,\r\n    scrolllock: 145,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    '\\'': 222,\r\n  }\r\n\r\n  toKeyName(name) {\r\n    name = name.toLowerCase();\r\n    name = this.keyAliases[name] || name;\r\n    return name;\r\n  }\r\n\r\n  toKeyCode(name) {\r\n    name = this.toKeyName(name);\r\n    const code = this.keyCodes[name] || name.toUpperCase().charCodeAt(0);\r\n    return code;\r\n  }\r\n\r\n  parse(shortcut) {\r\n    const result = {};\r\n\r\n    // Special case to handle the `+` key since we use it as a separator.\r\n    shortcut = shortcut.replace('\\\\+', '+add');\r\n\r\n    // Split keys\r\n    const values = shortcut.split('+');\r\n    const length = values.length;\r\n\r\n    // Ensure that all the modifiers are set to false unless the hotkey has them.\r\n    for (const k in this.keyModifiers) {\r\n      result[this.keyModifiers[k]] = false;\r\n    }\r\n\r\n    for (let value of values) {\r\n      // Optional key 'Shift?+a'\r\n      const optional = value.endsWith('?') && (value.length > 1);\r\n      if (optional) {\r\n        value = value.slice(0, -1);\r\n      }\r\n\r\n      const name = this.toKeyName(value);\r\n      const modifier = this.keyModifiers[name];\r\n\r\n      // Validate modifier\r\n      if ((value.length > 1) && !modifier && !this.keyAliases[value] && !this.keyCodes[name]) {\r\n        throw new TypeError(`Unknown shortcut modifier: \"${value}\"`);\r\n      }\r\n\r\n      // Set key\r\n      if (length === 1 || !modifier) {\r\n        if (!!this.useKey) {\r\n          result.key = name;\r\n        } else {\r\n          result.which = this.toKeyCode(value);\r\n        }\r\n      }\r\n\r\n      // Set modifier\r\n      if (modifier) {\r\n        result[modifier] = optional ? null : true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  isMatchEvent(event) {\r\n    for (const key in this.shortcut) {\r\n      const expected = this.shortcut[key];\r\n      let actual;\r\n\r\n      if (expected == null) {\r\n        continue;\r\n      }\r\n\r\n      // Get actual key\r\n      if (key === 'key' && event.key != null) {\r\n        actual = event.key.toLowerCase();\r\n      } else if (key === 'which') {\r\n        actual = ((expected === 91) && (event.which === 93)) ? 91 : event.which;\r\n      } else {\r\n        actual = event[key];\r\n      }\r\n\r\n      // Check if actual is null or not expected\r\n      if (actual == null && expected === false) {\r\n        continue;\r\n      }\r\n\r\n      // Check if actual is equal to expected\r\n      if (actual !== expected) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Store shortcut name inside event\r\n    Object.defineProperty(event, 'shortcut', {\r\n      value: this.shortcutName,\r\n      writable: false\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport class KeyboardShortcuts {\r\n\r\n  constructor(shortcuts) {\r\n    if (!Array.isArray(shortcuts)) shortcuts = [shortcuts];\r\n    this.shortcuts = shortcuts.map((s) => new KeyboardShortcut(s));\r\n  }\r\n\r\n  isMatchEvent(event) {\r\n    return this.shortcuts.some((s) => s.isMatchEvent(event));\r\n    // return this.shortcuts.some((s) => {\r\n    //   const result = s.isMatchEvent(event);\r\n    //   console.log('is', event, 'match', s, '=', result);\r\n    //   return result;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { KeyboardShortcuts } from './tools/keyboard';\r\n\r\nexport function keydown(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keydown',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n\r\nexport function keyup(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keyup',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n\r\nexport function keypress(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keypress',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n"],"names":["LitWidgetBase","LitElement","targetAttribute","targetsAttribute","createTargetPath","tagName","targetName","tag","toLowerCase","createTargetSelector","createTargetsSelector","targetMatches","el","selector","matches","targetsMatches","findTarget","converter","convert","value","querySelectorAll","closest","targetSelector","shadowRoot","findTargets","targets","push","targetsSelector","throttle","fn","delay","throttlePause","args","setTimeout","apply","duration","debounce","timeoutId","debouncer","clear","clearTimeout","Error","parseFloat","isNaN","endsWith","_class_private_field_loose_key","Symbol","iterator","ListenersMap","has","key","_class_private_field_loose_base","map","get","normalizeKey","set","listeners","Map","normalizedKey","delete","listener","constructor","JSON","stringify","EventHandler","addListener","addEventListener","eventName","handler","removeListener","removeEventListener","EventsController","prepareEvents","events","targetedEvents","event","target","HTMLElement","Document","Window","type","element","hostConnected","bindElementsEvents","bindTargetElements","host","listen","hostDisconnected","observer","disconnect","createHandler","wrapper","call","prevHandler","e","preset","isMatch","eventHandler","eventInfo","bindEvents","oldAttrValue","isOldMatch","id","isShadowNode","getRootNode","root","Element","hasAttribute","els","MutationObserver","mutations","mutation","oldValue","addedNodes","length","node","observe","childList","subtree","attributeFilter","attributeOldValue","addController","LitWidget","widget","name","proto","options","define","customElements","render","html","defaultValues","_defaultValues","parentDefaultValues","Object","getPrototypeOf","createRenderRoot","rootElement","querySelector","sharedStyles","style","document","head","getAttribute","styleClone","cloneNode","insertBefore","firstChild","connectedCallback","disconnectedCallback","_findCache","_events","eventsDefs","index","defineProperty","configurable","addInitializer","instance","klass","entries","targetElement","console","error","convertTemplate","template","templateContent","targetsAll","property","arguments","onEvent","KeyboardShortcut","isMac","_isMac","test","window","navigator","platform","toKeyName","keyAliases","toKeyCode","code","keyCodes","toUpperCase","charCodeAt","parse","shortcut","result","replace","values","split","k","keyModifiers","optional","slice","modifier","TypeError","useKey","which","isMatchEvent","actual","expected","shortcutName","writable","alt","control","meta","shift","add","break","cmd","command","ctl","ctrl","del","down","esc","ins","left","mod","opt","option","return","right","space","spacebar","up","win","windows","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","f","KeyboardShortcuts","shortcuts","some","s","Array","isArray","keydown","keyup","keypress"],"mappings":"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"}