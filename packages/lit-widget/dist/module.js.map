{"version":3,"file":"module.js","sources":["../src/debounce.js","../src/lit-widget.js","../src/decorators.js"],"sourcesContent":["/**\r\n * Throttle the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for \"resize\" or \"scroll\" events.\r\n *\r\n * @param {function} fn - The function to throttle.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new throttled function.\r\n */\r\nexport function throttle(fn, delay) {\r\n  let throttlePause;\r\n\r\n  function throttler(...args) {\r\n    if (throttlePause) return;\r\n    throttlePause = true;\r\n\r\n    setTimeout(() => {\r\n      fn.apply(this, args);\r\n      throttlePause = false;\r\n    }, duration(delay));\r\n  }\r\n\r\n  return throttler;\r\n}\r\n\r\n/**\r\n * Debounce the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for events such as key presses or \"input\" in input fields.\r\n *\r\n * @param {function} fn - The function to debounce.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new debounced function.\r\n */\r\nexport function debounce(fn, delay) {\r\n  let timeoutId;\r\n\r\n  function debouncer(...args) {\r\n    debouncer.clear();\r\n\r\n    timeoutId = setTimeout(() => {\r\n      timeoutId = null;\r\n\r\n      fn.apply(this, args);\r\n    }, duration(delay));\r\n  }\r\n\r\n  debouncer.clear = function() {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  }\r\n\r\n  return debouncer;\r\n}\r\n\r\n/**\r\n * Duration converter from human-readable form to milliseconds.\r\n *\r\n * Converts a string like `'<delay>ms'` to milliseconds.\r\n * Supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * If a numeric value is passed, it is returned unchanged.\r\n *\r\n * @param {(string|Number)} value - Duration in human-readable form.\r\n * @returns {Number} - Value in milliseconds.\r\n */\r\nexport function duration(value) {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n  if (typeof value !== 'string') {\r\n    throw new Error(`Invalid duration \"${value}\".`);\r\n  }\r\n\r\n  const duration = parseFloat(value);\r\n  if (isNaN(duration)) {\r\n    throw new Error(`Invalid duration value \"${value}\".`);\r\n  }\r\n\r\n  if (value.endsWith('ms')) {\r\n    return duration;\r\n  }\r\n  if (value.endsWith('s')) {\r\n    return duration * 1000;\r\n  }\r\n  if (value.endsWith('m')) {\r\n    return duration * 1000 * 60;\r\n  }\r\n}\r\n","import { LitElement, html } from 'lit';\r\nimport { templateContent } from 'lit/directives/template-content.js';\r\nimport { throttle, debounce } from './debounce';\r\n\r\n/**\r\n * Declarative binding to child elements for [LitElement](https://lit.dev/)\r\n * like [Github/Catalyst](https://catalyst.rocks/) and\r\n * [Stimulus.js](https://stimulus.hotwired.dev/).\r\n *\r\n * To define a widget, subclass LitWidget, specify targets using\r\n * the `@target/@targets` decorators or the `static targets/targetsAll` property,\r\n * and add event handlers using the `@onEvent` decorator or\r\n * the `static events` property.\r\n *\r\n * LitWidget unlike LitElement implements the **`render()`** method,\r\n * which renders all child elements of the widget through `<slot>`.\r\n * To change this behavior, simply override the `render` method and\r\n * implement your own rendering.\r\n *\r\n * LitWidget makes all page styles (both `<style>` and `<link>` tags) available\r\n * in **shadowRoot** by default (except styles with the `[data-shared=\"false\"]` attribute),\r\n * this behavior can be disabled by setting the `sharedStyles` static property to `false`.\r\n *\r\n * TODO: Describe \"static targets/targetsAll\"\r\n * TODO: Describe \"static events\"\r\n */\r\nexport class LitWidget extends LitElement {\r\n\r\n  static widget(name) {\r\n    return function(proto, options) {\r\n      LitWidget.define(name, proto, options);\r\n    }\r\n  }\r\n\r\n  static define(name, constructor, options) {\r\n    customElements.define('w-' + name, constructor, options);\r\n  }\r\n\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  /**\r\n   * Specifies whether to import page styles into shadowRoot.\r\n   */\r\n  static sharedStyles = true\r\n\r\n  createRenderRoot() {\r\n    // Find handle [data-root]\r\n    let shadowRoot = true;\r\n    let root;\r\n    const tagName = this.tagName.toLowerCase();\r\n    const rootElement = this.querySelector(`[data-root=\"${tagName}\"]`);\r\n    if (!!rootElement && rootElement.closest(tagName) == this) {\r\n      root = rootElement;\r\n      shadowRoot = false;\r\n    } else {\r\n      root = super.createRenderRoot();\r\n    }\r\n\r\n    const sharedStyles = Object.getPrototypeOf(this).constructor.sharedStyles;\r\n\r\n    if (shadowRoot && sharedStyles) {\r\n      // Import styles\r\n      for (const style of document.head.querySelectorAll('style')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n\r\n      // Import link[stylesheet]\r\n      for (const style of document.head.querySelectorAll('link[rel=\"stylesheet\"]')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n    }\r\n\r\n    return root;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    setTimeout(() => this._attachEvents());\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    setTimeout(() => this._detachEvents());\r\n  }\r\n\r\n  get _events() {\r\n    const klass = Object.getPrototypeOf(this).constructor;\r\n    return klass.events || [];\r\n  }\r\n\r\n  _attachEvents() {\r\n    for (const event of this._events) {\r\n      if (event.debounce && event.throttle) {\r\n        throw new Error(`[LitWidget \"${$this.tagName.toLowerCase()}\"] For the event \"${event.event}\", debounce and throttle are specified, you can specify only one thing.`);\r\n      }\r\n\r\n      let targetName;\r\n      let selector;\r\n\r\n      if (event.target instanceof Object) {\r\n        selector = event.target['selector'];\r\n      } else {\r\n        targetName = event.target;\r\n      }\r\n\r\n      if (!targetName && !selector) {\r\n        throw new Error(`[LitWidget \"${$this.tagName.toLowerCase()}\"] Invalid event target: \"${event.target}\".`);\r\n      }\r\n\r\n      const target = this.findTarget(this.tagName, /*event.target*/targetName, selector);\r\n      if (target) {\r\n        let handler = event.handler;\r\n        if (typeof handler === 'string') handler = this[handler];\r\n\r\n        event._handler = (...args) => handler.apply(this, args);\r\n\r\n        if (event.debounce) {\r\n          event._handler = debounce(event._handler, event.debounce);\r\n        } else if (event.throttle) {\r\n          event._handler = throttle(event._handler, event.throttle);\r\n        }\r\n\r\n        if (event['wrapper'] != null && typeof event['wrapper'] !== 'undefined') {\r\n          event._handler = event.wrapper.call(this, event._handler, this);\r\n        }\r\n\r\n        target.addEventListener(event.event, event._handler);\r\n      } else {\r\n        throw new Error(`[LitWidget \"${this.tagName.toLowerCase()}\"] Event target \"${event.target}\" not found.`);\r\n      }\r\n    }\r\n  }\r\n\r\n  _detachEvents() {\r\n    for (const event of this._events) {\r\n      if (!!event._handler) {\r\n        target.addEventListener(event.event, event._handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * findTarget will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning any the first child that:\r\n   *\r\n   *  - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find element instead of using [data-target]\r\n   * @param {Function} [converter] - The result converter can be used to convert the tag, for example using templateContent\r\n   * @returns {(HTMLElement|any|null)} The HTML element found, or null if no matching element was found\r\n   */\r\n  findTarget(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          return convert(el);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(`[data-target~=\"${tag}.${targetName}\"]`)) {\r\n        if (!el.closest(tag)) return convert(el);\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(`[data-target~=\"${tag}.${targetName}\"]`)) {\r\n      if (el.closest(tag) === this) return convert(el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * findTargets will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning all matching child elements that are:\r\n   *\r\n   *  - Matches the selector of `[data-targets~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find elements instead of using [data-targets]\r\n   * @param {Function} [converter] - The result converter can be used to convert the result tags, for example using templateContent\r\n   * @returns {HTMLElement[]} The HTML elements found\r\n   */\r\n  findTargets(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n    const targets = [];\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(`[data-targets~=\"${tag}.${targetName}\"]`)) {\r\n        if (!el.closest(tag)) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(`[data-targets~=\"${tag}.${targetName}\"]`)) {\r\n      if (el.closest(tag) === this) {\r\n        targets.push(convert(el));\r\n      }\r\n    }\r\n\r\n    return targets;\r\n  }\r\n\r\n}\r\n\r\nLitWidget.addInitializer((instance) => {\r\n  const klass = Object.getPrototypeOf(instance).constructor;\r\n\r\n  if (typeof klass.targets !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targets)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n\r\n          if (this._findCache[target]) {\r\n            return this._findCache[target];\r\n          } else {\r\n            let targetElement = this._findCache[target] ??= this.findTarget(this.tagName, target, options.selector);\r\n            if (targetElement == null) {\r\n              console.error(`[LitWidget \"${klass.name}\"] Target \"${target}\" not found.`);\r\n            } else {\r\n              const convertTemplate = (options.template === true) || ((targetElement.tagName.toLowerCase() == 'template') && (options.template !== false));\r\n              if (convertTemplate) {\r\n                targetElement = templateContent(targetElement);\r\n              }\r\n              this._findCache[target] = targetElement;\r\n            }\r\n            return targetElement;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (typeof klass.targetsAll !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targetsAll)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n          return this._findCache[target] ??= this.findTargets(this.tagName, target, options.selector);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n","import { LitWidget } from './lit-widget';\r\n\r\n/**\r\n * Decorator to bind a property to a child HTML element\r\n *\r\n * By default, it binds to a child element with the `data-target` attribute equal to\r\n * the component's tag name and the name of the property connected by a dot,\r\n * like this - `tag-name.property-name`.\r\n *\r\n * The element is first looked up in renderRoot and then in the component tag itself.\r\n *\r\n * If a CSS selector is specified, the element with the matching selector\r\n * is searched for only among the child elements of the component tag.\r\n *\r\n * If the element being bound is the `<template>` tag, then by default\r\n * automatic conversion takes place using the Lit's directive `templateContent`.\r\n * To disable this behavior - you must specify `template: false`.\r\n *\r\n * @param {{selector: string, template: Boolean}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the element to which the property will be bound.\r\n * @param {Boolean} options.template - Controls how the `<template>` tag is converted when bound.\r\n */\r\nexport function target({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targets === 'undefined') {\r\n      klass.targets = {};\r\n    }\r\n    klass.targets[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to bind a property to an array of HTML child elements\r\n *\r\n * By default, it binds to an array of child elements with a `data-targets`\r\n * attribute equal to the component's tag name and the name of the property\r\n * connected by a dot, like this - `tag-name.property-name`.\r\n *\r\n * Elements are looked up in renderRoot and in the component tag itself.\r\n *\r\n * If a CSS selector is specified, all elements with the matching selector\r\n * are searched only among the child elements of the component tag.\r\n *\r\n * @param {{selector: string}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the elements to which the property will be bound.\r\n */\r\nexport function targets({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targetsAll === 'undefined') {\r\n      klass.targetsAll = {};\r\n    }\r\n    klass.targetsAll[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to attach a method as an HTML child element event handler\r\n *\r\n * @param {(string|{selector: string})} target - The name of the target or CSS-selector to find the HTML element.\r\n *     To use a CSS selector to find a target for attaching an event handler,\r\n *     you must pass an object with the `selector` field instead of the target name, for example:\r\n *     `@onEvent({selector: '.button'}, 'click')`.\r\n * @param {string} event - The name of the DOM event to which the handler is attached.\r\n * @param {{debounce: (Number|string), throttle: (Number|string), wrapper: function(function, this)}} options - Optional parameters for attaching an event.\r\n * @param options.debounce - Delay to debounce the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for events such as key presses or \"input\" in input fields.\r\n * @param options.throttle - Delay to throttle the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for \"resize\" or \"scroll\" events.\r\n * @param options.wrapper - Wrapper function to apply additional decorators to the event handler;\r\n *     can be useful for example to apply a debounce decorator with a delay set at runtime:\r\n *     `onEvent(..., wrapper: (fn, self) => debounce(fn, self.delay) )`.\r\n *     The first parameter in the wrapper is the event handler method,\r\n *     the second is a reference to the class instance.\r\n */\r\nexport function onEvent(target, event, { debounce, throttle, wrapper } = {}) {\r\n  return function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.events === 'undefined') {\r\n      klass.events = [];\r\n    }\r\n\r\n    klass.events.push({\r\n      target: target,\r\n      handler: instance[property],\r\n      event: event,\r\n      debounce: debounce || null,\r\n      throttle: throttle || null,\r\n      wrapper: wrapper || null,\r\n    });\r\n  };\r\n}\r\n"],"names":["throttle","fn","delay","throttlePause","args","setTimeout","apply","duration","debounce","timeoutId","debouncer","clear","clearTimeout","value","Error","parseFloat","isNaN","endsWith","LitWidget","LitElement","widget","name","proto","options","define","constructor","customElements","render","html","createRenderRoot","root","shadowRoot","tagName","toLowerCase","rootElement","querySelector","closest","sharedStyles","Object","getPrototypeOf","style","document","head","querySelectorAll","getAttribute","styleClone","cloneNode","insertBefore","firstChild","connectedCallback","_attachEvents","disconnectedCallback","_detachEvents","_events","klass","events","event","targetName","selector","$this","target","findTarget","handler","_handler","wrapper","call","addEventListener","converter","convert","tag","el","findTargets","targets","push","addInitializer","instance","entries","defineProperty","configurable","get","_findCache","targetElement","console","error","convertTemplate","template","templateContent","targetsAll","property","arguments","onEvent"],"mappings":"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"}