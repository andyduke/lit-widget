{"version":3,"file":"index.js","sources":["../src/lit-widget-base.js","../src/tools/debounce.js","../src/tools/listeners-map.js","../src/events-controller.js","../src/lit-widget.js","../src/decorators.js"],"sourcesContent":["import { LitElement } from 'lit';\r\n\r\nexport class LitWidgetBase extends LitElement {\r\n\r\n  get targetAttribute() {\r\n    return 'data-target';\r\n  }\r\n\r\n  get targetsAttribute() {\r\n    return 'data-targets';\r\n  }\r\n\r\n  createTargetPath(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `${tag}.${targetName}`;\r\n  }\r\n\r\n  createTargetSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  createTargetsSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetsAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  targetMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  targetsMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetsSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  /**\r\n   * findTarget will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning any the first child that:\r\n   *\r\n   *  - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find element instead of using [data-target]\r\n   * @param {Function} [converter] - The result converter can be used to convert the tag, for example using templateContent\r\n   * @returns {(HTMLElement|any|null)} The HTML element found, or null if no matching element was found\r\n   */\r\n  findTarget(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          return convert(el);\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetSelector = this.createTargetSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetSelector)) {\r\n        if (!el.closest(tag)) return convert(el);\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetSelector)) {\r\n      if (el.closest(tag) === this) return convert(el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * findTargets will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning all matching child elements that are:\r\n   *\r\n   *  - Matches the selector of `[data-targets~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find elements instead of using [data-targets]\r\n   * @param {Function} [converter] - The result converter can be used to convert the result tags, for example using templateContent\r\n   * @returns {HTMLElement[]} The HTML elements found\r\n   */\r\n  findTargets(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n    const targets = [];\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetsSelector = this.createTargetsSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetsSelector)) {\r\n        if (!el.closest(tag)) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetsSelector)) {\r\n      if (el.closest(tag) === this) {\r\n        targets.push(convert(el));\r\n      }\r\n    }\r\n\r\n    return targets;\r\n  }\r\n\r\n}\r\n","/**\r\n * Throttle the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for \"resize\" or \"scroll\" events.\r\n *\r\n * @param {function} fn - The function to throttle.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new throttled function.\r\n */\r\nexport function throttle(fn, delay) {\r\n  let throttlePause;\r\n\r\n  function throttler(...args) {\r\n    if (throttlePause) return;\r\n    throttlePause = true;\r\n\r\n    setTimeout(() => {\r\n      fn.apply(this, args);\r\n      throttlePause = false;\r\n    }, duration(delay));\r\n  }\r\n\r\n  return throttler;\r\n}\r\n\r\n/**\r\n * Debounce the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for events such as key presses or \"input\" in input fields.\r\n *\r\n * @param {function} fn - The function to debounce.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new debounced function.\r\n */\r\nexport function debounce(fn, delay) {\r\n  let timeoutId;\r\n\r\n  function debouncer(...args) {\r\n    debouncer.clear();\r\n\r\n    timeoutId = setTimeout(() => {\r\n      timeoutId = null;\r\n\r\n      fn.apply(this, args);\r\n    }, duration(delay));\r\n  }\r\n\r\n  debouncer.clear = function() {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  }\r\n\r\n  return debouncer;\r\n}\r\n\r\n/**\r\n * Duration converter from human-readable form to milliseconds.\r\n *\r\n * Converts a string like `'<delay>ms'` to milliseconds.\r\n * Supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * If a numeric value is passed, it is returned unchanged.\r\n *\r\n * @param {(string|Number)} value - Duration in human-readable form.\r\n * @returns {Number} - Value in milliseconds.\r\n */\r\nexport function duration(value) {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n  if (typeof value !== 'string') {\r\n    throw new Error(`Invalid duration \"${value}\".`);\r\n  }\r\n\r\n  const duration = parseFloat(value);\r\n  if (isNaN(duration)) {\r\n    throw new Error(`Invalid duration value \"${value}\".`);\r\n  }\r\n\r\n  if (value.endsWith('ms')) {\r\n    return duration;\r\n  }\r\n  if (value.endsWith('s')) {\r\n    return duration * 1000;\r\n  }\r\n  if (value.endsWith('m')) {\r\n    return duration * 1000 * 60;\r\n  }\r\n}\r\n","\r\nexport class ListenersMap {\r\n\r\n\t#map;\r\n\r\n\tconstructor() {\r\n  \tthis.#map = new Map();\r\n  }\r\n\r\n  #normalizeKey(key) {\r\n  \treturn JSON.stringify(key);\r\n    //return key;\r\n  }\r\n\r\n  has(el, key) {\r\n  \tif (!this.#map.has(el)) return false;\r\n    return this.#map.get(el).has(this.#normalizeKey(key));\r\n  }\r\n\r\n  get(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).get(this.#normalizeKey(key));\r\n  }\r\n\r\n  set(el, key, value) {\r\n  \tconst listeners = this.#map.get(el) || new Map();\r\n\t\tconst normalizedKey = this.#normalizeKey(key);\r\n    listeners.set(normalizedKey, value);\r\n    this.#map.set(el, listeners);\r\n  }\r\n\r\n  delete(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).delete(this.#normalizeKey(key));\r\n  }\r\n\r\n  clear() {\r\n    this.#map = new Map();\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n  \tfor (const [el, listeners] of this.#map) {\r\n    \tfor (const [key, listener] of listeners) {\r\n      \tyield [el, key, listener];\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { LitWidgetBase } from './lit-widget-base';\r\nimport { throttle, debounce } from './tools/debounce';\r\nimport { ListenersMap } from './tools/listeners-map';\r\n\r\nclass EventHandler {\r\n\r\n  constructor(eventName, handler) {\r\n    this.eventName = eventName;\r\n    this.handler = handler;\r\n  }\r\n\r\n  addListener(el) {\r\n    el.addEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n  removeListener(el) {\r\n    el.removeEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class EventsController {\r\n\r\n  observer;\r\n\r\n  listeners = new ListenersMap();\r\n\r\n  constructor(host, events) {\r\n    if (!(host instanceof LitWidgetBase)) {\r\n      throw new Error('[LitWidget.EventsController]: The host is not an instance of the LitWidget class.');\r\n    }\r\n\r\n    this.host = host;\r\n    this.tagName = this.host.tagName.toLowerCase();\r\n    this.events = this.prepareEvents(events);\r\n\r\n    // console.log('Events:', this.events);\r\n\r\n    this.host.addController(this);\r\n  }\r\n\r\n  prepareEvents(events) {\r\n    let targetedEvents = new Map();\r\n\r\n    for (const event of events) {\r\n      let target;\r\n      if ((event.target instanceof HTMLElement) || (event.target instanceof Document) || (event.target instanceof Window)) {\r\n        target = {type: 'element', element: event.target};\r\n      } else {\r\n        if (typeof event.target === 'string') {\r\n          target = {type: 'target', target: event.target, selector: event.selector};\r\n        } else {\r\n          throw new Error(`[LitWidget.EventsController]: Invalid event definition: ${JSON.stringify(event)}.`);\r\n        }\r\n      }\r\n\r\n      targetedEvents.set(target, event);\r\n    }\r\n\r\n    // console.log('Targeted events:', targetedEvents);\r\n\r\n    return targetedEvents;\r\n  }\r\n\r\n  hostConnected() {\r\n    // console.log('[!] EventsController connected');\r\n\r\n    // Bind [type=element] events to elements\r\n    this.bindElementsEvents();\r\n\r\n    // Bind element events to targets\r\n    this.bindTargetElements(this.host);\r\n\r\n    // Observe shadowRoot and element\r\n    this.listen([this.host.shadowRoot, this.host]);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    // console.log('[!] EventsController disconnected');\r\n\r\n    // Disconnect observer\r\n    this.observer?.disconnect();\r\n    this.observer = null;\r\n\r\n    // Remove elements listeners\r\n    for (const [element, target, handler] of this.listeners) {\r\n      handler.removeListener(element);\r\n    }\r\n    this.listeners.clear();\r\n  }\r\n\r\n  createHandler(event) {\r\n    // Add listeners if attribute added\r\n    let handler = (...args) => event.handler.apply(this.host, args);\r\n\r\n    // Handling debounce, etc...\r\n    if (event.debounce) {\r\n      handler = debounce(handler, event.debounce);\r\n    } else if (event.throttle) {\r\n      handler = throttle(handler, event.throttle);\r\n    }\r\n    if (event['wrapper'] != null && typeof event['wrapper'] !== 'undefined') {\r\n      handler = event.wrapper.call(this.host, handler/*, this.host*/);\r\n    }\r\n\r\n    // Handling delegated event\r\n    if (typeof event.selector == 'string') {\r\n      const prevHandler = handler;\r\n      handler = (e) => {\r\n        if (e.target.matches(event.selector)) {\r\n          prevHandler(e);\r\n        }\r\n      };\r\n    }\r\n\r\n    // TODO: if eventName is preset -> wrap event._handler with `(event) => eventName.isMatch(event) ? event._handler : null`\r\n\r\n    // Create event handler\r\n    const eventHandler = new EventHandler(event.event, handler);\r\n\r\n    return eventHandler;\r\n  }\r\n\r\n  bindElementsEvents() {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'element') continue;\r\n\r\n      const key = {element: eventInfo.element, target: eventInfo};\r\n      if (this.listeners.has(eventInfo.element, key)) continue;\r\n\r\n      // Create event handler\r\n      const eventHandler = this.createHandler(event);\r\n\r\n      // Add listener to element\r\n      eventHandler.addListener(eventInfo.element);\r\n\r\n      // Store element's event handler\r\n      this.listeners.set(eventInfo.element, key, eventHandler);\r\n    }\r\n  }\r\n\r\n  bindEvents(el, oldAttrValue) {\r\n    // console.log('Bind actions:', el);\r\n\r\n    // for (const event of this.events) {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'target') continue;\r\n\r\n      const isMatch = this.host.targetMatches(el, this.tagName, eventInfo.target) || this.host.targetsMatches(el, this.tagName, eventInfo.target);\r\n      const isOldMatch = !isMatch && (oldAttrValue == this.host.createTargetPath(this.tagName, eventInfo.target));\r\n      const key = {element: el, id: event.id};\r\n\r\n      if (isMatch) {\r\n        if (this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (+):', key, el, event);\r\n\r\n        // Skip nested (Shadow DOM Only!)\r\n        const isShadowNode = el.getRootNode() === this.host.shadowRoot;\r\n        if (isShadowNode && el.closest(this.tagName)) continue;\r\n\r\n        // Create event handler\r\n        const eventHandler = this.createHandler(event);\r\n\r\n        // Add listener to element\r\n        eventHandler.addListener(el);\r\n\r\n        // Store element's event handler\r\n        this.listeners.set(el, key, eventHandler);\r\n      } else if (isOldMatch) {\r\n        if (!this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (-):', key, el, event);\r\n\r\n        // Remove listeners if attribute removed\r\n        const handler = this.listeners.get(el, key);\r\n        handler?.removeListener(el);\r\n\r\n        // Remove element from listeners map\r\n        this.listeners.delete(el, key);\r\n      }\r\n    }\r\n  }\r\n\r\n  bindTargetElements(root) {\r\n    // Bind controller's targets\r\n    for (const el of root.querySelectorAll(`[${this.host.targetAttribute}],[${this.host.targetsAttribute}]`)) {\r\n      this.bindEvents(el);\r\n    }\r\n\r\n    // Also bind the controller to itself\r\n    if (root instanceof Element && (root.hasAttribute(this.host.targetAttribute) || root.hasAttribute(this.host.targetsAttribute))) {\r\n      this.bindEvents(root);\r\n    }\r\n  }\r\n\r\n  listen(els) {\r\n    if (!this.observer) {\r\n      // Create observer\r\n      this.observer = new MutationObserver(mutations => {\r\n        for (const mutation of mutations) {\r\n          if (mutation.type === 'attributes' && mutation.target instanceof Element) {\r\n            this.bindEvents(mutation.target, mutation.oldValue);\r\n          } else if (mutation.type === 'childList' && mutation.addedNodes.length) {\r\n            for (const node of mutation.addedNodes) {\r\n              if (node instanceof Element) {\r\n                this.bindTargetElements(node);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Observe elements\r\n    for (const el of els) {\r\n      this.observer.observe(\r\n        el,\r\n        {\r\n          childList: true,\r\n          subtree: true,\r\n          attributeFilter: [\r\n            this.host.targetAttribute,\r\n            this.host.targetsAttribute,\r\n          ],\r\n          attributeOldValue : true,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { html } from 'lit';\r\nimport { templateContent } from 'lit/directives/template-content.js';\r\nimport { EventsController } from './events-controller';\r\nimport { LitWidgetBase } from './lit-widget-base';\r\n\r\n/**\r\n * Declarative binding to child elements for [LitElement](https://lit.dev/)\r\n * like [Github/Catalyst](https://catalyst.rocks/) and\r\n * [Stimulus.js](https://stimulus.hotwired.dev/).\r\n *\r\n * To define a widget, subclass LitWidget, specify targets using\r\n * the `@target/@targets` decorators or the `static targets/targetsAll` property,\r\n * and add event handlers using the `@onEvent` decorator or\r\n * the `static events` property.\r\n *\r\n * LitWidget unlike LitElement implements the **`render()`** method,\r\n * which renders all child elements of the widget through `<slot>`.\r\n * To change this behavior, simply override the `render` method and\r\n * implement your own rendering.\r\n *\r\n * LitWidget makes all page styles (both `<style>` and `<link>` tags) available\r\n * in **shadowRoot** by default (except styles with the `[data-shared=\"false\"]` attribute),\r\n * this behavior can be disabled by setting the `sharedStyles` static property to `false`.\r\n *\r\n * TODO: Describe \"static targets/targetsAll\"\r\n * TODO: Describe \"static events\"\r\n * TODO: Describe defaultValues pattern\r\n *\r\n * ## Events:\r\n *\r\n * ```js\r\n * events = [\r\n *   // Event bound to target\r\n *   {event: 'click', target: 'button', handler: 'doClick'},\r\n *\r\n *   // Event bound to DOM Element\r\n *   {event: 'click', target: document, handler: 'outsideClick'},\r\n *\r\n *   // Event bound to element via selector\r\n *   {event: 'click', selector: '.expand-button', handler: 'doExpand'},\r\n * ];\r\n * ```\r\n *\r\n */\r\nexport class LitWidget extends LitWidgetBase {\r\n\r\n  static widget(name) {\r\n    return function(proto, options) {\r\n      LitWidget.define(name, proto, options);\r\n    }\r\n  }\r\n\r\n  static define(name, constructor, options) {\r\n    customElements.define('w-' + name, constructor, options);\r\n  }\r\n\r\n  /**\r\n   * Default renderer, renders Light DOM\r\n   */\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  static defaultValues = {}\r\n\r\n  get defaultValues() {\r\n    if (this._defaultValues != null) {\r\n      return this._defaultValues;\r\n    }\r\n\r\n    const parentDefaultValues = (this instanceof LitWidget) ? {} : Object.getPrototypeOf(this).defaultValues;\r\n    this._defaultValues = {\r\n      ...parentDefaultValues,\r\n      ...this.constructor.defaultValues,\r\n    };\r\n\r\n    return this._defaultValues;\r\n  }\r\n\r\n  #events;\r\n\r\n  #prepareEvents() {\r\n    const events = [\r\n      ...this._events,\r\n      ...this.events,\r\n    ];\r\n\r\n  \tconst eventsDefs = events.map((event, index) => {\r\n      return {id: index, ...event};\r\n    });\r\n\r\n    Object.defineProperty(this, 'events', {\r\n    \tconfigurable: true,\r\n      get() {\r\n      \treturn eventsDefs;\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Specifies whether to import page styles into shadowRoot.\r\n   */\r\n  static sharedStyles = true\r\n\r\n  createRenderRoot() {\r\n    // Find handle [data-root]\r\n    let shadowRoot = true;\r\n    let root;\r\n    const tagName = this.tagName.toLowerCase();\r\n    const rootElement = this.querySelector(`[data-root=\"${tagName}\"]`);\r\n    if (!!rootElement && rootElement.closest(tagName) == this) {\r\n      root = rootElement;\r\n      shadowRoot = false;\r\n    } else {\r\n      root = super.createRenderRoot();\r\n    }\r\n\r\n    const sharedStyles = Object.getPrototypeOf(this).constructor.sharedStyles;\r\n\r\n    if (shadowRoot && sharedStyles) {\r\n      // Import styles\r\n      for (const style of document.head.querySelectorAll('style')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n\r\n      // Import link[stylesheet]\r\n      for (const style of document.head.querySelectorAll('link[rel=\"stylesheet\"]')) {\r\n        if (style.getAttribute('data-shared') == 'false') continue;\r\n        const styleClone = style.cloneNode(true);\r\n        root.insertBefore(styleClone, root.firstChild);\r\n      }\r\n    }\r\n\r\n    return root;\r\n  }\r\n\r\n  connectedCallback() {\r\n    if (!this.#events) {\r\n      this.#prepareEvents();\r\n      this.#events = new EventsController(this, this.events);\r\n    }\r\n\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    if (typeof this._findCache !== 'undefined') {\r\n      this._findCache = {};\r\n    }\r\n  }\r\n\r\n}\r\n\r\nLitWidget.addInitializer((instance) => {\r\n  const klass = Object.getPrototypeOf(instance).constructor;\r\n\r\n  if (typeof klass.targets !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targets)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n\r\n          if (this._findCache[target]) {\r\n            return this._findCache[target];\r\n          } else {\r\n            let targetElement = this._findCache[target] ??= this.findTarget(this.tagName, target, options.selector);\r\n            if (targetElement == null) {\r\n              console.error(`[LitWidget \"${klass.name}\"] Target \"${target}\" not found.`);\r\n            } else {\r\n              const convertTemplate = (options.template === true) || ((targetElement.tagName.toLowerCase() == 'template') && (options.template !== false));\r\n              if (convertTemplate) {\r\n                targetElement = templateContent(targetElement);\r\n              }\r\n              this._findCache[target] = targetElement;\r\n            }\r\n            return targetElement;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (typeof klass.targetsAll !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targetsAll)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n          return this._findCache[target] ??= this.findTargets(this.tagName, target, options.selector);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n","import { LitWidget } from './lit-widget';\r\n\r\n/**\r\n * Decorator to bind a property to a child HTML element\r\n *\r\n * By default, it binds to a child element with the `data-target` attribute equal to\r\n * the component's tag name and the name of the property connected by a dot,\r\n * like this - `tag-name.property-name`.\r\n *\r\n * The element is first looked up in renderRoot and then in the component tag itself.\r\n *\r\n * If a CSS selector is specified, the element with the matching selector\r\n * is searched for only among the child elements of the component tag.\r\n *\r\n * If the element being bound is the `<template>` tag, then by default\r\n * automatic conversion takes place using the Lit's directive `templateContent`.\r\n * To disable this behavior - you must specify `template: false`.\r\n *\r\n * @param {{selector: string, template: Boolean}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the element to which the property will be bound.\r\n * @param {Boolean} options.template - Controls how the `<template>` tag is converted when bound.\r\n */\r\nexport function target({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targets === 'undefined') {\r\n      klass.targets = {};\r\n    }\r\n    klass.targets[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to bind a property to an array of HTML child elements\r\n *\r\n * By default, it binds to an array of child elements with a `data-targets`\r\n * attribute equal to the component's tag name and the name of the property\r\n * connected by a dot, like this - `tag-name.property-name`.\r\n *\r\n * Elements are looked up in renderRoot and in the component tag itself.\r\n *\r\n * If a CSS selector is specified, all elements with the matching selector\r\n * are searched only among the child elements of the component tag.\r\n *\r\n * @param {{selector: string}} options - Optional parameters for binding.\r\n * @param {string} options.selector - CSS selector to find the elements to which the property will be bound.\r\n */\r\nexport function targets({ selector } = {}, name = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targetsAll === 'undefined') {\r\n      klass.targetsAll = {};\r\n    }\r\n    klass.targetsAll[property] = {selector};\r\n  };\r\n\r\n  if (name == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, name);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to attach a method as an HTML child element event handler\r\n *\r\n * @param {(string|{selector: string}|Window|Document|HTMLElement)} target - The name of the target or CSS-selector to find the HTML element.\r\n *     To use a CSS selector to find a target for attaching an event handler,\r\n *     you must pass an object with the `selector` field instead of the target name, for example:\r\n *     `@onEvent({selector: '.button'}, 'click')`.\r\n *     You can also pass an existing HTML element or window to attach an event handler to document.body or window for example.\r\n * @param {string} event - The name of the DOM event to which the handler is attached.\r\n * @param {{debounce: (Number|string), throttle: (Number|string), wrapper: function(function, this)}} options - Optional parameters for attaching an event.\r\n * @param options.debounce - Delay to debounce the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for events such as key presses or \"input\" in input fields.\r\n * @param options.throttle - Delay to throttle the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for \"resize\" or \"scroll\" events.\r\n * @param options.wrapper - Wrapper function to apply additional decorators to the event handler;\r\n *     can be useful for example to apply a debounce decorator with a delay set at runtime:\r\n *     `onEvent(..., wrapper: (fn, self) => debounce(fn, self.delay) )`.\r\n *     The first parameter in the wrapper is the event handler method,\r\n *     the second is a reference to the class instance.\r\n */\r\nexport function onEvent(target, event, { debounce, throttle, wrapper } = {}) {\r\n  return function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof instance._events === 'undefined') {\r\n      instance._events = [];\r\n    }\r\n\r\n    instance._events.push({\r\n      target: target,\r\n      handler: instance[property],\r\n      event: event,\r\n      debounce: debounce || null,\r\n      throttle: throttle || null,\r\n      wrapper: wrapper || null,\r\n    });\r\n  };\r\n}\r\n"],"names":["LitWidgetBase","createTargetPath","tagName","targetName","toLowerCase","createTargetSelector","tag","targetAttribute","createTargetsSelector","targetsAttribute","targetMatches","el","selector","matches","targetsMatches","findTarget","converter","convert","value","_create_for_of_iterator_helper_loose","querySelectorAll","closest","targetSelector","shadowRoot","findTargets","targets","push","targetsSelector","LitElement","throttle","fn","delay","throttlePause","args","setTimeout","apply","duration","debounce","timeoutId","debouncer","clear","clearTimeout","Error","parseFloat","isNaN","endsWith","_class_private_field_loose_key","Symbol","iterator","ListenersMap","_class_private_field_loose_base","map","Map","has","key","get","normalizeKey","set","listeners","normalizedKey","delete","JSON","stringify","EventHandler","eventName","handler","addListener","addEventListener","removeListener","removeEventListener","EventsController","host","events","_instanceof","prepareEvents","addController","targetedEvents","event","target","HTMLElement","Document","Window","type","element","hostConnected","bindElementsEvents","bindTargetElements","listen","hostDisconnected","observer","disconnect","createHandler","wrapper","call","prevHandler","e","eventInfo","eventHandler","bindEvents","oldAttrValue","isMatch","isOldMatch","id","isShadowNode","getRootNode","root","Element","hasAttribute","els","MutationObserver","mutations","mutation","oldValue","addedNodes","length","node","observe","childList","subtree","attributeFilter","attributeOldValue","LitWidget","render","html","createRenderRoot","rootElement","querySelector","sharedStyles","Object","getPrototypeOf","constructor","document","head","style","getAttribute","styleClone","cloneNode","insertBefore","firstChild","connectedCallback","disconnectedCallback","_findCache","widget","name","proto","options","define","customElements","defaultValues","_defaultValues","parentDefaultValues","eventsDefs","_events","index","defineProperty","configurable","addInitializer","instance","klass","entries","targetElement","console","error","template","templateContent","targetsAll","property","arguments","onEvent"],"mappings":"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"}