{"version":3,"file":"index.js","sources":["../src/lit-widget-base.js","../src/tools/debounce.js","../src/tools/listeners-map.js","../src/controllers/events-controller.js","../src/controllers/shared-styles-controller.js","../src/lit-widget.js","../src/decorators.js","../src/tools/keyboard.js","../src/events-helpers.js"],"sourcesContent":["import { LitElement } from 'lit';\r\n\r\nexport class LitWidgetBase extends LitElement {\r\n\r\n  get targetAttribute() {\r\n    return 'data-target';\r\n  }\r\n\r\n  get targetsAttribute() {\r\n    return 'data-targets';\r\n  }\r\n\r\n  createTargetPath(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `${tag}.${targetName}`;\r\n  }\r\n\r\n  createTargetSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  createTargetsSelector(tagName, targetName) {\r\n    const tag = tagName.toLowerCase();\r\n    return `[${this.targetsAttribute}~=\"${tag}.${targetName}\"]`;\r\n  }\r\n\r\n  targetMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  targetsMatches(el, tagName, targetName) {\r\n    const selector = this.createTargetsSelector(tagName, targetName);\r\n    return el.matches(selector);\r\n  }\r\n\r\n  /**\r\n   * findTarget will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning any the first child that:\r\n   *\r\n   *  - Matches the selector of `[data-target~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find element instead of using [data-target]\r\n   * @param {Function} [converter] - The result converter can be used to convert the tag, for example using templateContent\r\n   * @returns {(HTMLElement|any|null)} The HTML element found, or null if no matching element was found\r\n   */\r\n  findTarget(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          return convert(el);\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetSelector = this.createTargetSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetSelector)) {\r\n        if (!el.closest(tag)) return convert(el);\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetSelector)) {\r\n      if (el.closest(tag) === this) return convert(el);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * findTargets will run `querySelectorAll` against the given widget element, plus\r\n   * its shadowRoot, returning all matching child elements that are:\r\n   *\r\n   *  - Matches the selector of `[data-targets~=\"tag.name\"]` where tag is the\r\n   *    tagName of the HTMLElement, and `name` is the given `targetName` argument.\r\n   *\r\n   *  - Closest ascendant of the element, that matches the tagname of the\r\n   *    widget, is the specific instance of the widget itself - in other\r\n   *    words it is not nested in other widgets of the same type.\r\n   *\r\n   * @param {string} tagName - HTML element tag name\r\n   * @param {string} targetName - Widget property name\r\n   * @param {string} [selector] - Selector to find elements instead of using [data-targets]\r\n   * @param {Function} [converter] - The result converter can be used to convert the result tags, for example using templateContent\r\n   * @returns {HTMLElement[]} The HTML elements found\r\n   */\r\n  findTargets(tagName, targetName, selector = null, converter = null) {\r\n    let convert = (value) => !!converter ? converter(value) : value;\r\n    const tag = tagName.toLowerCase();\r\n    const targets = [];\r\n\r\n    if (!!selector) {\r\n      for (const el of this.querySelectorAll(selector)) {\r\n        if (el.closest(tag) === this) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    const targetsSelector = this.createTargetsSelector(tag, targetName);\r\n\r\n    if (this.shadowRoot) {\r\n      for (const el of this.shadowRoot.querySelectorAll(targetsSelector)) {\r\n        if (!el.closest(tag)) {\r\n          targets.push(convert(el));\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const el of this.querySelectorAll(targetsSelector)) {\r\n      if (el.closest(tag) === this) {\r\n        targets.push(convert(el));\r\n      }\r\n    }\r\n\r\n    return targets;\r\n  }\r\n\r\n}\r\n","/**\r\n * Throttle the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for \"resize\" or \"scroll\" events.\r\n *\r\n * @param {function} fn - The function to throttle.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new throttled function.\r\n */\r\nexport function throttle(fn, delay) {\r\n  let throttlePause;\r\n\r\n  function throttler(...args) {\r\n    if (throttlePause) return;\r\n    throttlePause = true;\r\n\r\n    setTimeout(() => {\r\n      fn.apply(this, args);\r\n      throttlePause = false;\r\n    }, duration(delay));\r\n  }\r\n\r\n  return throttler;\r\n}\r\n\r\n/**\r\n * Debounce the execution of the function.\r\n *\r\n * You can specify the value in milliseconds as a number or in string format\r\n * with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * This can be handy for events such as key presses or \"input\" in input fields.\r\n *\r\n * @param {function} fn - The function to debounce.\r\n * @param {(Number|string)} delay - Delay value.\r\n * @returns {Function} The new debounced function.\r\n */\r\nexport function debounce(fn, delay) {\r\n  let timeoutId;\r\n\r\n  function debouncer(...args) {\r\n    debouncer.clear();\r\n\r\n    timeoutId = setTimeout(() => {\r\n      timeoutId = null;\r\n\r\n      fn.apply(this, args);\r\n    }, duration(delay));\r\n  }\r\n\r\n  debouncer.clear = function() {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = null;\r\n    }\r\n  }\r\n\r\n  return debouncer;\r\n}\r\n\r\n/**\r\n * Duration converter from human-readable form to milliseconds.\r\n *\r\n * Converts a string like `'<delay>ms'` to milliseconds.\r\n * Supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *\r\n * If a numeric value is passed, it is returned unchanged.\r\n *\r\n * @param {(string|Number)} value - Duration in human-readable form.\r\n * @returns {Number} - Value in milliseconds.\r\n */\r\nexport function duration(value) {\r\n  if (typeof value === 'number') {\r\n    return value;\r\n  }\r\n  if (typeof value !== 'string') {\r\n    throw new Error(`Invalid duration \"${value}\".`);\r\n  }\r\n\r\n  const duration = parseFloat(value);\r\n  if (isNaN(duration)) {\r\n    throw new Error(`Invalid duration value \"${value}\".`);\r\n  }\r\n\r\n  if (value.endsWith('ms')) {\r\n    return duration;\r\n  }\r\n  if (value.endsWith('s')) {\r\n    return duration * 1000;\r\n  }\r\n  if (value.endsWith('m')) {\r\n    return duration * 1000 * 60;\r\n  }\r\n}\r\n","\r\nexport class ListenersMap {\r\n\r\n\t#map;\r\n\r\n\tconstructor() {\r\n  \tthis.#map = new Map();\r\n  }\r\n\r\n  #normalizeKey(key) {\r\n  \treturn JSON.stringify(key);\r\n    //return key;\r\n  }\r\n\r\n  has(el, key) {\r\n  \tif (!this.#map.has(el)) return false;\r\n    return this.#map.get(el).has(this.#normalizeKey(key));\r\n  }\r\n\r\n  get(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).get(this.#normalizeKey(key));\r\n  }\r\n\r\n  set(el, key, value) {\r\n  \tconst listeners = this.#map.get(el) || new Map();\r\n\t\tconst normalizedKey = this.#normalizeKey(key);\r\n    listeners.set(normalizedKey, value);\r\n    this.#map.set(el, listeners);\r\n  }\r\n\r\n  delete(el, key) {\r\n  \tif (!this.#map.has(el)) return null;\r\n    return this.#map.get(el).delete(this.#normalizeKey(key));\r\n  }\r\n\r\n  clear() {\r\n    this.#map = new Map();\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n  \tfor (const [el, listeners] of this.#map) {\r\n    \tfor (const [key, listener] of listeners) {\r\n      \tyield [el, key, listener];\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { LitWidgetBase } from '../lit-widget-base';\r\nimport { throttle, debounce } from '../tools/debounce';\r\nimport { ListenersMap } from '../tools/listeners-map';\r\n\r\nclass EventHandler {\r\n\r\n  constructor(eventName, handler) {\r\n    this.eventName = eventName;\r\n    this.handler = handler;\r\n  }\r\n\r\n  addListener(el) {\r\n    el.addEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n  removeListener(el) {\r\n    el.removeEventListener(this.eventName, this.handler);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * TODO:\r\n */\r\nexport class EventsController {\r\n\r\n  host;\r\n\r\n  observer;\r\n\r\n  listeners = new ListenersMap();\r\n\r\n  constructor(host, events) {\r\n    if (!(host instanceof LitWidgetBase)) {\r\n      throw new Error('[LitWidget.EventsController]: The host is not an instance of the LitWidget class.');\r\n    }\r\n\r\n    this.host = host;\r\n    this.tagName = this.host.tagName.toLowerCase();\r\n    this.events = this.prepareEvents(events);\r\n\r\n    // console.log('Events:', this.events);\r\n\r\n    this.host.addController(this);\r\n  }\r\n\r\n  prepareEvents(events) {\r\n    let targetedEvents = new Map();\r\n\r\n    for (const event of events) {\r\n      let target;\r\n      if ((event.target instanceof HTMLElement) || (event.target instanceof Document) || (event.target instanceof Window)) {\r\n        target = {type: 'element', element: event.target};\r\n      } else {\r\n        if (typeof event.target === 'string') {\r\n          target = {type: 'target', target: event.target, selector: event.selector};\r\n        } else {\r\n          throw new Error(`[LitWidget.EventsController]: Invalid event definition: ${JSON.stringify(event)}.`);\r\n        }\r\n      }\r\n\r\n      targetedEvents.set(target, event);\r\n    }\r\n\r\n    // console.log('Targeted events:', targetedEvents);\r\n\r\n    return targetedEvents;\r\n  }\r\n\r\n  hostConnected() {\r\n    // console.log('[!] EventsController connected');\r\n\r\n    // Bind [type=element] events to elements\r\n    this.bindElementsEvents();\r\n\r\n    // Bind element events to targets\r\n    this.bindTargetElements(this.host);\r\n\r\n    // Observe shadowRoot and element\r\n    this.listen([this.host.shadowRoot, this.host]);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    // console.log('[!] EventsController disconnected');\r\n\r\n    // Disconnect observer\r\n    this.observer?.disconnect();\r\n    this.observer = null;\r\n\r\n    // Remove elements listeners\r\n    for (const [element, target, handler] of this.listeners) {\r\n      handler.removeListener(element);\r\n    }\r\n    this.listeners.clear();\r\n  }\r\n\r\n  createHandler(event) {\r\n    // Event name\r\n    let eventName = event.event;\r\n\r\n    // Add listeners if attribute added\r\n    let handler = (...args) => event.handler.apply(this.host, args);\r\n\r\n    // Handling debounce, etc...\r\n    if (event.debounce) {\r\n      handler = debounce(handler, event.debounce);\r\n    } else if (event.throttle) {\r\n      handler = throttle(handler, event.throttle);\r\n    }\r\n    if (event['wrapper'] != null && typeof event['wrapper'] !== 'undefined') {\r\n      handler = event.wrapper.call(this.host, handler/*, this.host*/);\r\n    }\r\n\r\n    // Handling delegated event\r\n    if (typeof event.selector == 'string') {\r\n      handler = (() => {\r\n        const prevHandler = handler;\r\n        return (e) => {\r\n          if (e.target.matches(event.selector)) {\r\n            prevHandler(e);\r\n          }\r\n        };\r\n      })();\r\n    }\r\n\r\n    // Handle conditional event (eventName = {eventHandler: string, isMatch: function})\r\n    if (typeof eventName == 'object') {\r\n      const preset = eventName;\r\n      if ((preset.eventName == null) || (typeof preset.isMatch !== 'function')) {\r\n        throw new Error(`[LitWidget.EventsController]: Invalid conditional event: ${preset}`);\r\n      }\r\n\r\n      // Extract eventName from preset\r\n      eventName = preset.eventName;\r\n\r\n      // Wrap handler\r\n      handler = (() => {\r\n        const isMatch = preset.isMatch;\r\n        const prevHandler = handler;\r\n        return (e) => {\r\n          if (isMatch(e)) {\r\n            prevHandler(e);\r\n          }\r\n        };\r\n      })();\r\n\r\n    }\r\n\r\n    // Create event handler\r\n    const eventHandler = new EventHandler(eventName, handler);\r\n\r\n    return eventHandler;\r\n  }\r\n\r\n  bindElementsEvents() {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'element') continue;\r\n\r\n      const key = {element: eventInfo.element, target: eventInfo};\r\n      if (this.listeners.has(eventInfo.element, key)) continue;\r\n\r\n      // Create event handler\r\n      const eventHandler = this.createHandler(event);\r\n\r\n      // Add listener to element\r\n      eventHandler.addListener(eventInfo.element);\r\n\r\n      // Store element's event handler\r\n      this.listeners.set(eventInfo.element, key, eventHandler);\r\n    }\r\n  }\r\n\r\n  bindEvents(el, oldAttrValue) {\r\n    // console.log('Bind actions:', el);\r\n\r\n    // for (const event of this.events) {\r\n    for (const [eventInfo, event] of this.events) {\r\n      if (eventInfo.type !== 'target') continue;\r\n\r\n      const isMatch = this.host.targetMatches(el, this.tagName, eventInfo.target) || this.host.targetsMatches(el, this.tagName, eventInfo.target);\r\n      const isOldMatch = !isMatch && (oldAttrValue == this.host.createTargetPath(this.tagName, eventInfo.target));\r\n      const key = {element: el, id: event.id};\r\n\r\n      if (isMatch) {\r\n        if (this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (+):', key, el, event);\r\n\r\n        // Skip nested (Shadow DOM Only!)\r\n        const isShadowNode = el.getRootNode() === this.host.shadowRoot;\r\n        if (isShadowNode && el.closest(this.tagName)) continue;\r\n\r\n        // Create event handler\r\n        const eventHandler = this.createHandler(event);\r\n\r\n        // Add listener to element\r\n        eventHandler.addListener(el);\r\n\r\n        // Store element's event handler\r\n        this.listeners.set(el, key, eventHandler);\r\n      } else if (isOldMatch) {\r\n        if (!this.listeners.has(el, key)) continue;\r\n\r\n        // console.log('Bind [3] (-):', key, el, event);\r\n\r\n        // Remove listeners if attribute removed\r\n        const handler = this.listeners.get(el, key);\r\n        handler?.removeListener(el);\r\n\r\n        // Remove element from listeners map\r\n        this.listeners.delete(el, key);\r\n      }\r\n    }\r\n  }\r\n\r\n  bindTargetElements(root) {\r\n    // Bind controller's targets\r\n    for (const el of root.querySelectorAll(`[${this.host.targetAttribute}],[${this.host.targetsAttribute}]`)) {\r\n      this.bindEvents(el);\r\n    }\r\n\r\n    // Also bind the controller to itself\r\n    if (root instanceof Element && (root.hasAttribute(this.host.targetAttribute) || root.hasAttribute(this.host.targetsAttribute))) {\r\n      this.bindEvents(root);\r\n    }\r\n  }\r\n\r\n  listen(els) {\r\n    if (!this.observer) {\r\n      // Create observer\r\n      this.observer = new MutationObserver(mutations => {\r\n        for (const mutation of mutations) {\r\n          if (mutation.type === 'attributes' && mutation.target instanceof Element) {\r\n            this.bindEvents(mutation.target, mutation.oldValue);\r\n          } else if (mutation.type === 'childList' && mutation.addedNodes.length) {\r\n            for (const node of mutation.addedNodes) {\r\n              if (node instanceof Element) {\r\n                this.bindTargetElements(node);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Observe elements\r\n    for (const el of els) {\r\n      if (el == null) continue;\r\n\r\n      this.observer.observe(\r\n        el,\r\n        {\r\n          childList: true,\r\n          subtree: true,\r\n          attributeFilter: [\r\n            this.host.targetAttribute,\r\n            this.host.targetsAttribute,\r\n          ],\r\n          attributeOldValue : true,\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","\r\nclass DocumentStylesObserver {\r\n\r\n  document;\r\n\r\n  observer;\r\n\r\n  observing;\r\n\r\n  listeners;\r\n\r\n  constructor(document) {\r\n    this.document = document;\r\n    this.listeners = new Set();\r\n    this.observing = false;\r\n\r\n    this.observer = new MutationObserver(mutations => {\r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'childList' && (mutation.addedNodes.length || mutation.removedNodes.length)) {\r\n          // console.log('! [+]', mutation.addedNodes);\r\n          // console.log('! [-]', mutation.removedNodes);\r\n\r\n          for (const node of mutation.addedNodes) {\r\n            if (node instanceof Element) {\r\n              const tagName = node.tagName.toLowerCase();\r\n              if ((tagName == 'style') || (tagName == 'link' && node.getAttribute('rel') == 'stylesheet')) {\r\n                this.notifyListeners({type: 'add', node});\r\n              }\r\n            }\r\n          }\r\n\r\n          for (const node of mutation.removedNodes) {\r\n            if (node instanceof Element) {\r\n              const tagName = node.tagName.toLowerCase();\r\n              if ((tagName == 'style') || (tagName == 'link' && node.getAttribute('rel') == 'stylesheet')) {\r\n                this.notifyListeners({type: 'remove', node});\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  observe() {\r\n    if (this.observing) return;\r\n\r\n    this.observer.observe(\r\n      this.document.head,\r\n      {\r\n        childList: true,\r\n        subtree: true,\r\n      }\r\n    );\r\n\r\n    this.observing = true;\r\n  }\r\n\r\n  disconnect() {\r\n    if (!this.observing) return;\r\n\r\n    this.observer.takeRecords();\r\n    this.observer.disconnect();\r\n\r\n    this.observing = false;\r\n  }\r\n\r\n  addListener(fn) {\r\n    this.listeners.add(fn);\r\n    if (this.listeners.size > 0) {\r\n      this.observe();\r\n    }\r\n  }\r\n\r\n  removeListener(fn) {\r\n    this.listeners.delete(fn);\r\n    if (this.listeners.size == 0) {\r\n      this.disconnect();\r\n    }\r\n  }\r\n\r\n  notifyListeners(operation) {\r\n    for (const listener of this.listeners) {\r\n      listener(operation);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * TODO:\r\n */\r\nexport class SharedStylesController {\r\n\r\n  host;\r\n\r\n  static observer;\r\n\r\n  initialized = false;\r\n\r\n  styleRoot;\r\n  styles = new WeakMap();\r\n\r\n  constructor(host, sharedStyles) {\r\n    if (sharedStyles) {\r\n      this.host = host;\r\n      this.host.addController(this);\r\n      this.stylesUpdated = (o) => this.updated(o);\r\n    }\r\n  }\r\n\r\n  hostConnected() {\r\n    const shadowRoot = this.host.shadowRoot != null;\r\n\r\n    if (!this.initialized) {\r\n      this.initialized = true;\r\n\r\n      const root = this.host.renderRoot;\r\n      const document = this.host.ownerDocument;\r\n\r\n      if (shadowRoot) {\r\n        // Import styles\r\n        for (const style of document.head.querySelectorAll('style')) {\r\n          this.addStyle(style, root);\r\n        }\r\n\r\n        // Import link[stylesheet]\r\n        for (const style of document.head.querySelectorAll('link[rel=\"stylesheet\"]')) {\r\n          this.addStyle(style, root);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (shadowRoot) {\r\n      this.startObserving();\r\n    }\r\n  }\r\n\r\n  addStyle(style, root = null) {\r\n    // Skip non-shared styles\r\n    if (style.getAttribute('data-shared') == 'false') return;\r\n\r\n    if (root == null) root = this.host.renderRoot;\r\n\r\n    // Create styleRoot\r\n    if (this.styleRoot == null) {\r\n      this.styleRoot = this.host.ownerDocument.createElement('shared-styles--');\r\n      root.insertBefore(this.styleRoot, root.firstChild);\r\n    }\r\n\r\n    // Cloning and adding a style\r\n    const styleClone = style.cloneNode(true);\r\n    this.styleRoot.appendChild(styleClone);\r\n\r\n    // Save the link between the style and its clone\r\n    this.styles.set(style, styleClone);\r\n  }\r\n\r\n  removeStyle(style) {\r\n    const styleClone = this.styles.get(style);\r\n    if (styleClone != null) {\r\n      styleClone.remove();\r\n      this.styles.delete(style);\r\n    }\r\n  }\r\n\r\n  hostDisconnected() {\r\n    this.stopObserving();\r\n  }\r\n\r\n  startObserving() {\r\n    // Create observer\r\n    if (SharedStylesController.observer == null) {\r\n      SharedStylesController.observer = new DocumentStylesObserver(this.host.ownerDocument);\r\n    }\r\n\r\n    // Start observing\r\n    SharedStylesController.observer.addListener(this.stylesUpdated);\r\n  }\r\n\r\n  stopObserving() {\r\n    if (SharedStylesController.observer != null) {\r\n      SharedStylesController.observer.removeListener(this.stylesUpdated);\r\n    }\r\n  }\r\n\r\n  updated({type, node}) {\r\n    switch(type) {\r\n      case 'add':\r\n        this.addStyle(node);\r\n        break;\r\n\r\n      case 'remove':\r\n        this.removeStyle(node);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n","import { html } from 'lit';\r\nimport { templateContent } from 'lit/directives/template-content.js';\r\nimport { EventsController } from './controllers/events-controller';\r\nimport { SharedStylesController } from './controllers/shared-styles-controller';\r\nimport { LitWidgetBase } from './lit-widget-base';\r\n\r\n/**\r\n * Declarative binding to child elements for [LitElement](https://lit.dev/)\r\n * like [Github/Catalyst](https://catalyst.rocks/) and\r\n * [Stimulus.js](https://stimulus.hotwired.dev/).\r\n *\r\n * To define a widget, subclass LitWidget, specify targets using\r\n * the `@target/@targets` decorators or the `static targets/targetsAll` property,\r\n * and add event handlers using the `@onEvent` decorator or\r\n * the `events` property.\r\n *\r\n * LitWidget unlike LitElement implements the **`render()`** method,\r\n * which renders all child elements of the widget through `<slot>`.\r\n * To change this behavior, simply override the `render` method and\r\n * implement your own rendering.\r\n *\r\n * LitWidget makes all page styles (both `<style>` and `<link>` tags) available\r\n * in **shadowRoot** by default (except styles with the `[data-shared=\"false\"]` attribute),\r\n * this behavior can be disabled by setting the `sharedStyles` static property to `false`.\r\n *\r\n * TODO: Describe [data-root] binding\r\n *\r\n * TODO: Describe \"static targets/targetsAll\"\r\n * TODO: Describe \"static events\"\r\n * TODO: Describe defaultValues pattern\r\n *\r\n * ## Events:\r\n *\r\n * ```js\r\n * events = [\r\n *   // Event bound to target\r\n *   {event: 'click', target: 'button', handler: 'doClick'},\r\n *\r\n *   // Event bound to DOM Element\r\n *   {event: 'click', target: document, handler: 'outsideClick'},\r\n *\r\n *   // Event bound to element via selector\r\n *   {event: 'click', selector: '.expand-button', handler: 'doExpand'},\r\n * ];\r\n * ```\r\n *\r\n */\r\nexport class LitWidget extends LitWidgetBase {\r\n\r\n  // #region Static helpers\r\n\r\n  /** TODO: ??? */\r\n  static widget(name) {\r\n    return function(proto, options) {\r\n      LitWidget.define(name, proto, options);\r\n    }\r\n  }\r\n\r\n  static define(name, constructor, options) {\r\n    customElements.define('w-' + name, constructor, options);\r\n  }\r\n\r\n  /**\r\n   * TODO: Static getter\r\n   */\r\n\tget static() {\r\n    return Object.getPrototypeOf(this).constructor;\r\n  }\r\n\r\n  // #endregion Static helpers\r\n\r\n  // #region Default render\r\n\r\n  /**\r\n   * Default renderer, renders Light DOM\r\n   */\r\n  render() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  // #endregion Default render\r\n\r\n  // #region Default values\r\n\r\n  static defaultValues = {}\r\n\r\n  get defaultValues() {\r\n    if (this._defaultValues != null) {\r\n      return this._defaultValues;\r\n    }\r\n\r\n    // const parentDefaultValues = (this instanceof LitWidget) ? {} : Object.getPrototypeOf(this).defaultValues;\r\n    const parentDefaultValues = Object.getPrototypeOf(this).defaultValues ?? {};\r\n    this._defaultValues = {\r\n      ...parentDefaultValues,\r\n      ...this.constructor.defaultValues,\r\n    };\r\n\r\n    return this._defaultValues;\r\n  }\r\n\r\n  // #endregion Default values\r\n\r\n  // #region Events\r\n\r\n  #events;\r\n\r\n  #prepareEvents() {\r\n    const events = [\r\n      ...(this._events || []),\r\n      ...(this.events || []),\r\n    ];\r\n\r\n  \tconst eventsDefs = events.map((event, index) => {\r\n      return {id: index, ...event};\r\n    });\r\n\r\n    // Seal events\r\n    Object.defineProperty(this, 'events', {\r\n    \tconfigurable: true,\r\n      get() {\r\n      \treturn eventsDefs;\r\n      },\r\n    });\r\n  }\r\n\r\n  // #endregion Events\r\n\r\n  // #region Shared styles\r\n\r\n  /**\r\n   * Specifies whether to import page styles into shadowRoot.\r\n   */\r\n  static sharedStyles = null\r\n\r\n  /**\r\n   * TODO: describe override case\r\n   */\r\n  get sharedStyles() {\r\n    let sharedStyles = /*Object.getPrototypeOf(this).constructor*/this.static.sharedStyles;\r\n\r\n    // Treat null as auto\r\n    if ((sharedStyles == null) && !this.lightDOM) {\r\n      // If sharedStyles is \"auto\" and not lightDOM - then it will default to true\r\n      sharedStyles = true;\r\n    }\r\n\r\n    return sharedStyles;\r\n  }\r\n\r\n  #sharedStylesController = new SharedStylesController(this, this.sharedStyles);\r\n\r\n  // #endregion Shared styles\r\n\r\n  // #region Light DOM\r\n\r\n  /**\r\n   * TODO:\r\n   */\r\n  static lightDOM = false\r\n\r\n  /**\r\n   * TODO: describe override case\r\n   */\r\n  get lightDOM() {\r\n    return /*Object.getPrototypeOf(this).constructor*/this.static.lightDOM;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    let root;\r\n    const tagName = this.tagName.toLowerCase();\r\n\r\n    if (this.lightDOM) {\r\n      // Find light DOM root [data-root]\r\n      let rootElement = this.querySelector(`[data-root=\"${tagName}\"]`);\r\n\r\n      // If the nearest root target found is not the element itself,\r\n      // ignore it (to avoid using the root target in a nested same widget)\r\n      if (rootElement != null && rootElement.closest(tagName) != this) {\r\n        rootElement = null;\r\n      }\r\n\r\n      // Use found root target or element itself as renderRoot\r\n      root = rootElement ?? this;\r\n    } else {\r\n      root = super.createRenderRoot();\r\n    }\r\n\r\n    if (this.lightDOM && this.sharedStyles === true) {\r\n      console.warn(`[LitWidget \"${tagName}\"] Shared styles (sharedStyles = true) with lightDOM have no effect.`);\r\n    }\r\n\r\n    return root;\r\n  }\r\n\r\n  // #endregion Light DOM\r\n\r\n  // #region Lifecycle\r\n\r\n  connectedCallback() {\r\n    if (!this.#events) {\r\n      this.#prepareEvents();\r\n      this.#events = new EventsController(this, this.events);\r\n    }\r\n\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    if (typeof this._findCache !== 'undefined') {\r\n      this._findCache = {};\r\n    }\r\n  }\r\n\r\n  // #endregion Lifecycle\r\n\r\n}\r\n\r\n// #region Targets getters\r\n\r\nLitWidget.addInitializer((instance) => {\r\n  const klass = Object.getPrototypeOf(instance).constructor;\r\n\r\n  if (typeof klass.targets !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targets)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, options.property ?? target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findCache === 'undefined') {\r\n            this._findCache = {};\r\n          }\r\n\r\n          const cache = options.cache ?? true;\r\n\r\n          if (cache && this._findCache[target]) {\r\n            return this._findCache[target];\r\n          } else {\r\n            let targetElement = this._findCache[target] ??= this.findTarget(this.tagName, target, options.selector);\r\n            if (targetElement == null) {\r\n              console.error(`[LitWidget \"${klass.name}\"] Target \"${target}\" not found.`);\r\n            } else {\r\n              const convertTemplate = (options.template === true) || ((targetElement.tagName.toLowerCase() == 'template') && (options.template !== false));\r\n              if (convertTemplate) {\r\n                targetElement = templateContent(targetElement);\r\n              }\r\n              this._findCache[target] = targetElement;\r\n            }\r\n            return targetElement;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  if (typeof klass.targetsAll !== 'undefined') {\r\n    for (const [target, options] of Object.entries(klass.targetsAll)) {\r\n      // Add target getter\r\n      Object.defineProperty(instance, options.property ?? target, {\r\n        configurable: true,\r\n        get() {\r\n          if (typeof this._findAllCache === 'undefined') {\r\n            this._findAllCache = {};\r\n          }\r\n\r\n          const cache = options.cache ?? true;\r\n\r\n          if (cache && this._findAllCache[target]) {\r\n            return this._findAllCache[target];\r\n          } else {\r\n            const targetElements = this._findAllCache[target] ??= this.findTargets(this.tagName, target, options.selector);\r\n            return targetElements;\r\n          }\r\n\r\n          // return this._findAllCache[target] ??= this.findTargets(this.tagName, target, options.selector);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\n// #endregion Targets getters\r\n","import { LitWidget } from './lit-widget';\r\n\r\n/**\r\n * Decorator to bind a property to a child HTML element\r\n *\r\n * TODO: examples\r\n *\r\n * By default, it binds to a child element with the `data-target` attribute equal to\r\n * the component's tag name and the name of the property connected by a dot,\r\n * like this - `tag-name.property-name`.\r\n *\r\n * The element is first looked up in renderRoot and then in the component tag itself.\r\n *\r\n * If a CSS selector is specified, the element with the matching selector\r\n * is searched for only among the child elements of the component tag.\r\n *\r\n * If the element being bound is the `<template>` tag, then by default\r\n * automatic conversion takes place using the Lit's directive `templateContent`.\r\n * To disable this behavior - you must specify `template: false`.\r\n *\r\n * @param {{name: string, selector: string, cache: Boolean, template: Boolean}} options - Optional parameters for binding.\r\n * @param {string} options.name - Target name to find the element to which the property will be bound.\r\n * @param {string} options.selector - CSS selector to find the element to which the property will be bound.\r\n * @param {Boolean} options.cache - Should the bind operation be cached or search for an element each time it is accessed?\r\n * @param {Boolean} options.template - Controls how the `<template>` tag is converted when bound.\r\n */\r\nexport function target({ name, selector, cache, template } = {}, propertyName = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targets === 'undefined') {\r\n      klass.targets = {};\r\n    }\r\n    klass.targets[name ?? property] = {property, selector, cache, template};\r\n  };\r\n\r\n  if (propertyName == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, propertyName);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to bind a property to an array of HTML child elements\r\n *\r\n * TODO: examples\r\n *\r\n * By default, it binds to an array of child elements with a `data-targets`\r\n * attribute equal to the component's tag name and the name of the property\r\n * connected by a dot, like this - `tag-name.property-name`.\r\n *\r\n * Elements are looked up in renderRoot and in the component tag itself.\r\n *\r\n * If a CSS selector is specified, all elements with the matching selector\r\n * are searched only among the child elements of the component tag.\r\n *\r\n * @param {{name: string, selector: string, cache: Boolean}} options - Optional parameters for binding.\r\n * @param {string} options.name - Target name to find the elements to which the property will be bound.\r\n * @param {string} options.selector - CSS selector to find the elements to which the property will be bound.\r\n * @param {Boolean} options.cache - Should the bind operation be cached or search for an element each time it is accessed?\r\n */\r\nexport function targets({ name, selector, cache } = {}, propertyName = null) {\r\n  const wrapper = function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof klass.targetsAll === 'undefined') {\r\n      klass.targetsAll = {};\r\n    }\r\n    klass.targetsAll[name ?? property] = {property, selector, cache};\r\n  };\r\n\r\n  if (propertyName == null) {\r\n    return wrapper;\r\n  } else {\r\n    const instance = arguments[0];\r\n    wrapper(instance, propertyName);\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator to attach a method as an HTML child element event handler\r\n *\r\n * TODO: examples\r\n *\r\n * @param {(string|Window|Document|HTMLElement)} target - The name of the target to find the HTML element.\r\n *     You can pass an existing HTML element or window to attach an event handler to document.body or window for example.\r\n * @param {string|{eventName: string, isMatch: function}} event - The name of the DOM event to which the handler is attached.\r\n * @param {{selector: string, debounce: (Number|string), throttle: (Number|string), wrapper: function(function, this)}} options - Optional parameters for attaching an event.\r\n * @param {string} options.selector - This parameter allows you to filter the triggering of delegated events by CSS selector.\r\n * @param {string|number} options.debounce - Delay to debounce the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for events such as key presses or \"input\" in input fields.\r\n * @param {string|number} options.throttle - Delay to throttle the execution of the event handler,\r\n *     you can specify the value in milliseconds as a number or in string format\r\n *     with the suffix `'<delay>ms'`, supported suffixes: ms - milliseconds, s - seconds, m - minutes.\r\n *     This can be handy for \"resize\" or \"scroll\" events.\r\n * @param {function} options.wrapper - Wrapper function to apply additional decorators to the event handler;\r\n *     can be useful for example to apply a debounce decorator with a delay set at runtime:\r\n *     `onEvent(..., wrapper: (fn, self) => debounce(fn, self.delay) )`.\r\n *     The first parameter in the wrapper is the event handler method,\r\n *     the second is a reference to the class instance.\r\n */\r\nexport function onEvent(target, event, { selector, debounce, throttle, wrapper } = {}) {\r\n  return function(instance, property) {\r\n    const klass = instance.constructor;\r\n    if (!(instance instanceof LitWidget)) {\r\n      throw new Error(`[LitWidget] The class \"${klass.name}\" is not a descendant of LitWidget.`);\r\n    }\r\n\r\n    if (typeof instance._events === 'undefined') {\r\n      instance._events = [];\r\n    }\r\n\r\n    instance._events.push({\r\n      target,\r\n      handler: instance[property],\r\n      event,\r\n      selector,\r\n      debounce,\r\n      throttle,\r\n      wrapper,\r\n    });\r\n  };\r\n}\r\n","// https://github.com/ianstormtaylor/is-hotkey/blob/master/src/index.js\r\n\r\nexport class KeyboardShortcut {\r\n\r\n  constructor(shortcut, {useKey = true} = {}) {\r\n    // Generate F1-F20 codes\r\n    for (let f = 1; f < 20; f++) {\r\n      this.keyCodes['f' + f] = 111 + f;\r\n    }\r\n\r\n    this.useKey = useKey;\r\n    this.shortcutName = shortcut.toLowerCase();\r\n    this.shortcut = this.parse(this.shortcutName);\r\n  }\r\n\r\n  static get isMac() {\r\n    return this._isMac ??= /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\r\n  }\r\n\r\n  keyModifiers = {\r\n    alt: 'altKey',\r\n    control: 'ctrlKey',\r\n    meta: 'metaKey',\r\n    shift: 'shiftKey',\r\n  }\r\n\r\n  keyAliases = {\r\n    add: '+',\r\n    break: 'pause',\r\n    cmd: 'meta',\r\n    command: 'meta',\r\n    ctl: 'control',\r\n    ctrl: 'control',\r\n    del: 'delete',\r\n    down: 'arrowdown',\r\n    esc: 'escape',\r\n    ins: 'insert',\r\n    left: 'arrowleft',\r\n    mod: this.constructor.isMac ? 'meta' : 'control',\r\n    opt: 'alt',\r\n    option: 'alt',\r\n    return: 'enter',\r\n    right: 'arrowright',\r\n    space: ' ',\r\n    spacebar: ' ',\r\n    up: 'arrowup',\r\n    win: 'meta',\r\n    windows: 'meta',\r\n  }\r\n\r\n  keyCodes = {\r\n    backspace: 8,\r\n    tab: 9,\r\n    enter: 13,\r\n    shift: 16,\r\n    control: 17,\r\n    alt: 18,\r\n    pause: 19,\r\n    capslock: 20,\r\n    escape: 27,\r\n    ' ': 32,\r\n    pageup: 33,\r\n    pagedown: 34,\r\n    end: 35,\r\n    home: 36,\r\n    arrowleft: 37,\r\n    arrowup: 38,\r\n    arrowright: 39,\r\n    arrowdown: 40,\r\n    insert: 45,\r\n    delete: 46,\r\n    meta: 91,\r\n    numlock: 144,\r\n    scrolllock: 145,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    '\\'': 222,\r\n  }\r\n\r\n  toKeyName(name) {\r\n    name = name.toLowerCase();\r\n    name = this.keyAliases[name] || name;\r\n    return name;\r\n  }\r\n\r\n  toKeyCode(name) {\r\n    name = this.toKeyName(name);\r\n    const code = this.keyCodes[name] || name.toUpperCase().charCodeAt(0);\r\n    return code;\r\n  }\r\n\r\n  parse(shortcut) {\r\n    const result = {};\r\n\r\n    // Special case to handle the `+` key since we use it as a separator.\r\n    shortcut = shortcut.replace('\\\\+', '+add');\r\n\r\n    // Split keys\r\n    const values = shortcut.split('+');\r\n    const length = values.length;\r\n\r\n    // Ensure that all the modifiers are set to false unless the hotkey has them.\r\n    for (const k in this.keyModifiers) {\r\n      result[this.keyModifiers[k]] = false;\r\n    }\r\n\r\n    for (let value of values) {\r\n      // Optional key 'Shift?+a'\r\n      const optional = value.endsWith('?') && (value.length > 1);\r\n      if (optional) {\r\n        value = value.slice(0, -1);\r\n      }\r\n\r\n      const name = this.toKeyName(value);\r\n      const modifier = this.keyModifiers[name];\r\n\r\n      // Validate modifier\r\n      if ((value.length > 1) && !modifier && !this.keyAliases[value] && !this.keyCodes[name]) {\r\n        throw new TypeError(`Unknown shortcut modifier: \"${value}\"`);\r\n      }\r\n\r\n      // Set key\r\n      if (length === 1 || !modifier) {\r\n        if (this.useKey === true) {\r\n          result.key = name;\r\n        } else {\r\n          result.which = this.toKeyCode(value);\r\n        }\r\n      }\r\n\r\n      // Set modifier\r\n      if (modifier) {\r\n        result[modifier] = optional ? null : true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  isMatchEvent(event) {\r\n    for (const key in this.shortcut) {\r\n      const expected = this.shortcut[key];\r\n      let actual;\r\n\r\n      if (expected == null) {\r\n        continue;\r\n      }\r\n\r\n      // Get actual key\r\n      if (key === 'key' && event.key != null) {\r\n        actual = event.key.toLowerCase();\r\n      } else if (key === 'which') {\r\n        actual = ((expected === 91) && (event.which === 93)) ? 91 : event.which;\r\n      } else {\r\n        actual = event[key];\r\n      }\r\n\r\n      // Check if actual is null or not expected\r\n      if (actual == null && expected === false) {\r\n        continue;\r\n      }\r\n\r\n      // Check if actual is equal to expected\r\n      if (actual !== expected) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Store shortcut name inside event\r\n    Object.defineProperty(event, 'shortcut', {\r\n      value: this.shortcutName,\r\n      writable: false\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport class KeyboardShortcuts {\r\n\r\n  constructor(shortcuts) {\r\n    if (!Array.isArray(shortcuts)) shortcuts = [shortcuts];\r\n    this.shortcuts = shortcuts.map((s) => new KeyboardShortcut(s));\r\n  }\r\n\r\n  isMatchEvent(event) {\r\n    return this.shortcuts.some((s) => s.isMatchEvent(event));\r\n    // return this.shortcuts.some((s) => {\r\n    //   const result = s.isMatchEvent(event);\r\n    //   console.log('is', event, 'match', s, '=', result);\r\n    //   return result;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { KeyboardShortcuts } from './tools/keyboard';\r\n\r\nexport function keydown(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keydown',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n\r\nexport function keyup(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keyup',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n\r\nexport function keypress(shortcut) {\r\n  const shortcuts = new KeyboardShortcuts(shortcut);\r\n  return {\r\n    eventName: 'keypress',\r\n    isMatch: (e) => shortcuts.isMatchEvent(e),\r\n  }\r\n}\r\n"],"names":["LitWidgetBase","createTargetPath","tagName","targetName","toLowerCase","createTargetSelector","tag","targetAttribute","createTargetsSelector","targetsAttribute","targetMatches","el","selector","matches","targetsMatches","findTarget","converter","convert","value","_create_for_of_iterator_helper_loose","querySelectorAll","closest","targetSelector","shadowRoot","findTargets","targets","push","targetsSelector","LitElement","throttle","fn","delay","throttlePause","args","setTimeout","apply","duration","debounce","timeoutId","debouncer","clear","clearTimeout","Error","parseFloat","isNaN","endsWith","_class_private_field_loose_key","Symbol","iterator","ListenersMap","_class_private_field_loose_base","map","Map","has","key","get","normalizeKey","set","listeners","normalizedKey","delete","JSON","stringify","EventHandler","eventName","handler","addListener","addEventListener","removeListener","removeEventListener","EventsController","host","events","_instanceof","prepareEvents","addController","targetedEvents","event","target","HTMLElement","Document","Window","type","element","hostConnected","bindElementsEvents","bindTargetElements","listen","hostDisconnected","observer","disconnect","createHandler","wrapper","call","prevHandler","e","isMatch","preset","eventInfo","eventHandler","bindEvents","oldAttrValue","isOldMatch","id","isShadowNode","getRootNode","root","Element","hasAttribute","els","MutationObserver","mutations","mutation","oldValue","addedNodes","length","node","observe","childList","subtree","attributeFilter","attributeOldValue","DocumentStylesObserver","document","Set","observing","removedNodes","getAttribute","notifyListeners","head","takeRecords","add","size","operation","listener","SharedStylesController","sharedStyles","initialized","styles","WeakMap","stylesUpdated","o","updated","renderRoot","ownerDocument","style","addStyle","startObserving","styleRoot","createElement","insertBefore","firstChild","styleClone","cloneNode","appendChild","removeStyle","remove","stopObserving","LitWidget","sharedStylesController","render","html","createRenderRoot","lightDOM","rootElement","querySelector","console","warn","connectedCallback","disconnectedCallback","_findCache","widget","name","proto","options","define","constructor","customElements","static","Object","getPrototypeOf","defaultValues","_defaultValues","parentDefaultValues","eventsDefs","_events","index","defineProperty","configurable","addInitializer","instance","klass","entries","property","cache","targetElement","error","template","templateContent","targetsAll","_findAllCache","propertyName","arguments","onEvent","KeyboardShortcut","shortcut","useKey","keyModifiers","alt","control","meta","shift","keyAliases","break","cmd","command","ctl","ctrl","del","down","esc","ins","left","mod","isMac","opt","option","return","right","space","spacebar","up","win","windows","keyCodes","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","f","shortcutName","parse","toKeyName","toKeyCode","toUpperCase","charCodeAt","result","values","replace","split","k","optional","slice","modifier","TypeError","which","isMatchEvent","expected","actual","writable","_isMac","test","window","navigator","platform","KeyboardShortcuts","shortcuts","Array","isArray","s","some","keydown","keyup","keypress"],"mappings":"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"}